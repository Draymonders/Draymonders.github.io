<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Draymonder&#39;s Blog</title>
  <subtitle>梦在远方</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://draymonder.me/"/>
  <updated>2018-03-25T04:22:52.899Z</updated>
  <id>http://draymonder.me/</id>
  
  <author>
    <name>Draymonder</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Linux学习</title>
    <link href="http://draymonder.me/2018/03/25/linux/"/>
    <id>http://draymonder.me/2018/03/25/linux/</id>
    <published>2018-03-25T15:59:59.000Z</published>
    <updated>2018-03-25T04:22:52.899Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>  考虑到开发和别人所说的一些linux的便捷性，所以要学一下Linux<br>相关的操作。</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="linux-特点"><a href="#linux-特点" class="headerlink" title="linux 特点"></a>linux 特点</h3><p>  1.免费/开源<br>  2.支持多线程/多用户<br>  3.安全性好<br>  4.对内存和文件管理优越。</p>
<h3 id="工具使用"><a href="#工具使用" class="headerlink" title="工具使用"></a>工具使用</h3><h4 id="Vim使用"><a href="#Vim使用" class="headerlink" title="Vim使用"></a>Vim使用</h4><figure class="highlight stylus"><table><tr><td class="code"><pre><div class="line">vim -文件名</div><div class="line"><span class="selector-tag">i</span> 插入模式</div><div class="line">ESC + :wq 退出并保存</div></pre></td></tr></table></figure>
<h3 id="用户组"><a href="#用户组" class="headerlink" title="用户组"></a>用户组</h3><figure class="highlight routeros"><table><tr><td class="code"><pre><div class="line">文件所有者，所在组和其他组</div><div class="line">groupadd 组名</div><div class="line">查看所有组的信息</div><div class="line">cat /etc/group</div><div class="line">useradd -g 组名 用户名</div><div class="line"></div><div class="line">查看所有用户信息</div><div class="line">cat /etc/passwd</div><div class="line"></div><div class="line">文件(-) 目录(d) 链接(l)</div><div class="line"></div><div class="line">操作权限</div><div class="line"> r可读 4表示 </div><div class="line"> w可写 2表示</div><div class="line"> x可执行 1表示</div><div class="line"></div><div class="line">chmod 777 文件名 改变文件权限 </div><div class="line">usermod -g 组名 用户名 改变某个用户所在的组</div><div class="line">chown 用户名 文件名</div><div class="line">chgrp 用户所在组 文件名</div></pre></td></tr></table></figure>
<h3 id="命令学习"><a href="#命令学习" class="headerlink" title="命令学习"></a>命令学习</h3><h4 id="关机命令"><a href="#关机命令" class="headerlink" title="关机命令"></a>关机命令</h4><figure class="highlight arduino"><table><tr><td class="code"><pre><div class="line"><span class="built_in">shutdown</span> -h now 立即关机</div><div class="line"><span class="built_in">shutdown</span> -r now 现在重新启动计算机</div><div class="line">reboot     重启计算机</div></pre></td></tr></table></figure>
<h4 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h4><figure class="highlight less"><table><tr><td class="code"><pre><div class="line"><span class="selector-tag">pwd</span> 显示当前路径</div><div class="line"><span class="selector-tag">cd</span> 改变目录</div><div class="line"><span class="selector-tag">ls</span> 列出文件和目录</div><div class="line"> <span class="selector-tag">-a</span> 显示全部文件</div><div class="line"> <span class="selector-tag">-l</span> 显示长列表格式</div><div class="line"></div><div class="line"><span class="selector-tag">mkdir</span> 建立目录</div><div class="line"><span class="selector-tag">rmdir</span> 删除空目录 <span class="comment">//不怎么用</span></div><div class="line"></div><div class="line"><span class="selector-tag">rm</span> <span class="selector-tag">-rf</span> 删除文件或者目录</div><div class="line"> <span class="selector-tag">-r</span> 删除目录 <span class="selector-tag">-f</span>强制</div><div class="line"></div><div class="line"><span class="selector-tag">touch</span> 建立空文件</div><div class="line"></div><div class="line"><span class="selector-tag">Ctrl</span>+<span class="selector-tag">L</span> 清屏</div><div class="line"></div><div class="line"><span class="selector-tag">cp</span> <span class="selector-attr">[选项]</span> <span class="selector-attr">[原文件或目录]</span> <span class="selector-attr">[目标目录]</span> 复制命令</div><div class="line">用来复制或者更改文件名的后缀</div><div class="line"></div><div class="line"><span class="selector-tag">mv</span> <span class="selector-attr">[选项]</span> <span class="selector-attr">[原文件或目录]</span> <span class="selector-attr">[目标目录]</span> 剪切命令</div><div class="line">目录重命名或者剪切</div><div class="line"></div><div class="line">| 管道命令</div><div class="line"></div><div class="line"><span class="selector-tag">grep</span> 查找内容 文件名 在文本中查询内容</div><div class="line"></div><div class="line">&gt; 文件重定向(覆盖写)</div><div class="line">&gt;&gt; 追加写</div><div class="line"></div><div class="line">解压命令 <span class="selector-tag">tar</span> <span class="selector-tag">-zxvf</span> ???<span class="selector-class">.tar</span><span class="selector-class">.gz</span></div></pre></td></tr></table></figure>
<h3 id="磁盘管理"><a href="#磁盘管理" class="headerlink" title="磁盘管理"></a>磁盘管理</h3><h4 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h4><figure class="highlight gauss"><table><tr><td class="code"><pre><div class="line">root 存放用户root的相关文件</div><div class="line">home 存放普通用户的相关文件</div><div class="line">bin 存放常用命令的目录</div><div class="line">sbin 存放具有一定权限的命令(管理员)</div><div class="line">mnt 挂载软驱和光驱的目录</div><div class="line">boot 存放引导相关的文件 <span class="comment">// 一般不要删除目录下文件</span></div><div class="line">etc 存放配置相关文件</div><div class="line">var 存放经常变化的数据</div><div class="line">usr 文件默认安装文件夹</div><div class="line">opt 给主机额外安装软件所摆放的目录</div><div class="line"><span class="keyword">lib</span> 系统使用的函数库的目录</div><div class="line"><span class="function"><span class="keyword">proc</span> 目录下的数据都在内存中，如系统核心，外部设备，网络状态</span></div></pre></td></tr></table></figure>
<h4 id="文件链接"><a href="#文件链接" class="headerlink" title="文件链接"></a>文件链接</h4><p>在Linux系统中，硬链接有两个局限性<br>第一： 只能给文件建立硬链接，而不能给目录建立硬链接<br>第二： 他们不能跨文件系统<br><figure class="highlight livecodeserver"><table><tr><td class="code"><pre><div class="line">经过测试</div><div class="line"><span class="built_in">ln</span> <span class="built_in">file</span> hfile </div><div class="line"><span class="built_in">ln</span> -s <span class="built_in">file</span> sfile </div><div class="line">显示hfile 为硬链接 和<span class="built_in">file</span>是相同的索引节点</div><div class="line">而sfile 则是符号链接，指向<span class="built_in">file</span>的节点，因此删除<span class="built_in">file</span> 那么sfile无效</div></pre></td></tr></table></figure></p>
<h4 id="磁盘分区"><a href="#磁盘分区" class="headerlink" title="磁盘分区"></a>磁盘分区</h4><p>磁盘分区表示，IDE硬盘的设备名称是以/hdX表示，SATA硬盘的设备名称是以/sdX表示的<br>X可以是a~z的小写字母序列<br>在Windows操作系统中，磁盘分区是以盘符的形式表示的，如C:,D:,E:,F:,而在Linux系统中，<br>磁盘分区是以文件的形式表示的，如/dev/sda1,/dev/sda2<br><figure class="highlight awk"><table><tr><td class="code"><pre><div class="line">ll <span class="regexp">/dev/</span>sda*    <span class="regexp">//</span>ls -l</div></pre></td></tr></table></figure></p>
<p>磁盘分区一般包括主分区和拓展分区，逻辑分区是拓展分区的磁盘分区类型。<br>一个磁盘中只能容纳4个主要分区，包括主分区和拓展分区<br>系统为主要分区预留了标识，预留了1~4的序号表示，所以逻辑分区的序号标识从5开始。<br><figure class="highlight less"><table><tr><td class="code"><pre><div class="line"><span class="comment">//查看所有磁盘分区情况</span></div><div class="line"><span class="selector-tag">fdisk</span> <span class="selector-tag">-l</span></div><div class="line"><span class="comment">//查磁盘使用情况</span></div><div class="line"><span class="selector-tag">df</span> <span class="selector-attr">[-参数]</span></div><div class="line">比如 <span class="selector-tag">df</span> <span class="selector-tag">-l</span></div><div class="line"><span class="comment">//查询目录在哪个分区</span></div><div class="line"><span class="selector-tag">df</span> <span class="selector-attr">[路径]</span></div></pre></td></tr></table></figure></p>
<h3 id="Shell脚本编程"><a href="#Shell脚本编程" class="headerlink" title="Shell脚本编程"></a>Shell脚本编程</h3><h4 id="简单实例"><a href="#简单实例" class="headerlink" title="简单实例"></a>简单实例</h4><p>shell脚本文件的后缀可有可无，这是Linecho ux操作系统对文件访问的一个特点。为了让用户知道文件的类型，都会使用.sh作为Shell脚本文件的后缀<br><figure class="highlight bash"><table><tr><td class="code"><pre><div class="line">vim hello.sh</div><div class="line">chmod +x hello.sh</div><div class="line">./hello.sh</div><div class="line"></div><div class="line">hello.sh文件</div><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"Hello,World!"</span>;</div><div class="line"><span class="built_in">echo</span> <span class="string">"显示系统时间"</span>;</div><div class="line">date</div></pre></td></tr></table></figure></p>
<p>变量<br><figure class="highlight shell"><table><tr><td class="code"><pre><div class="line">var=string</div><div class="line">计算命令</div><div class="line">expr 20 - 15 //操作符两端需要有空格</div><div class="line"></div><div class="line">预定义变量</div><div class="line"><span class="meta">  $</span><span class="bash"><span class="comment">#: 位置参数的数量</span></span></div><div class="line"><span class="meta">  $</span><span class="bash">*或<span class="variable">$@</span>: 所有位置参数的内容</span></div><div class="line"><span class="meta">  $</span><span class="bash">?: 命令执行后的返回值</span></div><div class="line"><span class="meta">  $</span><span class="bash">$: 当前进程的进程ID(PID)</span></div><div class="line"><span class="meta">  $</span><span class="bash">!: 最后一个后台运行进程的进程ID(PID)</span></div><div class="line"><span class="meta">  $</span><span class="bash">0: 当前执行的程序名</span></div><div class="line"></div><div class="line">//使用export命令设置环境变量</div><div class="line">export PATH=/home/draymond/shell:$PATH </div><div class="line"></div><div class="line">//一般值都被Shell看成是字符串</div></pre></td></tr></table></figure></p>
<p>条件表达式<br><figure class="highlight gams"><table><tr><td class="code"><pre><div class="line">文件比较</div><div class="line">    -e filename <span class="comment">//exist 文件存在为真</span></div><div class="line">    -d filename <span class="comment">//dir 目录存在为真</span></div><div class="line">    -f filename <span class="comment">//file 常规文件存在为真</span></div><div class="line">    -r/-w/-x filename <span class="comment">//可读，可写，可执行</span></div><div class="line">字符串比较</div><div class="line">    -z/-n string <span class="comment">//string长度为零/非零</span></div><div class="line">    string1=string2 <span class="comment">//string1与string2相同</span></div><div class="line">    string1!=string2 <span class="comment">//不同</span></div><div class="line">数值比较</div><div class="line">    num1 -<span class="keyword">eq</span> num2 <span class="comment">//num1==num2</span></div><div class="line">    num1 -<span class="keyword">ne</span> num2 <span class="comment">//num1!=num2</span></div><div class="line">    num1 -<span class="keyword">lt</span> num2 <span class="comment">//num1&lt;num2</span></div><div class="line">    num1 -<span class="keyword">le</span> num2 <span class="comment">//num1&lt;=num2</span></div><div class="line">    num1 -<span class="keyword">gt</span> num2 <span class="comment">//num1&gt;num2</span></div><div class="line">    num1 -<span class="keyword">ge</span> num2 <span class="comment">//num1&gt;=num2</span></div><div class="line">逻辑判断</div><div class="line">    exp1 -a exp2 <span class="comment">//逻辑与</span></div><div class="line">    exp1 -o exp2 <span class="comment">//逻辑或</span></div><div class="line">    ! exo1 <span class="comment">//取反</span></div></pre></td></tr></table></figure></p>
<p>条件控制<br><figure class="highlight bash"><table><tr><td class="code"><pre><div class="line"><span class="keyword">if</span>判断</div><div class="line">    <span class="keyword">if</span> [ <span class="variable">$&#123;SHELL&#125;</span> != <span class="string">"/bin/bash"</span> ]</div><div class="line">    <span class="keyword">then</span> </div><div class="line">        <span class="built_in">echo</span> <span class="string">"I Love you"</span>;</div><div class="line">    <span class="keyword">elif</span> [ 1 -eq 1 ]</div><div class="line">    <span class="keyword">then</span> </div><div class="line">        <span class="built_in">echo</span> <span class="string">"Draymonder"</span>;</div><div class="line">    <span class="keyword">else</span> </div><div class="line">        <span class="built_in">echo</span> <span class="string">"I do not love you"</span>;</div><div class="line">    <span class="keyword">fi</span></div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      Linux学习,一些记录
    
    </summary>
    
    
      <category term="Linux" scheme="http://draymonder.me/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>二叉搜索树，二叉堆学习</title>
    <link href="http://draymonder.me/2018/03/23/BinarySearchTree/"/>
    <id>http://draymonder.me/2018/03/23/BinarySearchTree/</id>
    <published>2018-03-23T12:00:00.000Z</published>
    <updated>2018-03-24T00:25:10.862Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Blog 好久没更新了，因为一方面忙着刷题，一方面搞大创(好浪费精力，不太想搞)</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>今天突然不知道怎么回事，想看看之前买的数据结构书(挑战程序设计竞赛-算法和数据结构)，<br>虽然整本书不太难，但是还是有很多不太明白的知识，光二叉搜索树就倒腾了一下午，怪我太菜了吧</p>
<h3 id="BinarySearchTree"><a href="#BinarySearchTree" class="headerlink" title="BinarySearchTree"></a>BinarySearchTree</h3><figure class="highlight zephir"><table><tr><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line">using <span class="keyword">namespace</span> <span class="title">std</span>;</div><div class="line"></div><div class="line">struct node &#123;</div><div class="line">    <span class="keyword">int</span> key;</div><div class="line">    <span class="comment">/*p是parent l是left r是right*/</span></div><div class="line">    node *p,*l,*r;</div><div class="line">&#125;;</div><div class="line"></div><div class="line">node *root;</div><div class="line"></div><div class="line"><span class="comment">//插入操作</span></div><div class="line">void insert(<span class="keyword">int</span> k) &#123;</div><div class="line">    <span class="comment">//y是要找的节点的父节点</span></div><div class="line">    node *y = <span class="keyword">NULL</span>;</div><div class="line">    <span class="comment">//x用来寻找应该插入的位置</span></div><div class="line">    node *x = root;</div><div class="line">    node *z = <span class="keyword">new</span> node;</div><div class="line">    z-&gt;key = k;</div><div class="line">    z-&gt;l = <span class="keyword">NULL</span>;</div><div class="line">    z-&gt;r = <span class="keyword">NULL</span>;</div><div class="line"></div><div class="line">    <span class="keyword">while</span> (x != <span class="keyword">NULL</span>) &#123;</div><div class="line">        y = x;</div><div class="line">        <span class="keyword">if</span>( z-&gt;key &lt; x-&gt;key)</div><div class="line">            x = x-&gt;l;</div><div class="line">        <span class="keyword">else</span></div><div class="line">            x = x-&gt;r;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    z-&gt;p = y;</div><div class="line">    <span class="keyword">if</span>(y == <span class="keyword">NULL</span>)</div><div class="line">        root = z;</div><div class="line">    <span class="keyword">else</span> &#123;</div><div class="line">        <span class="keyword">if</span>(z-&gt;key &lt; y-&gt;key)</div><div class="line">            y-&gt;l = z;</div><div class="line">        <span class="keyword">else</span></div><div class="line">            y-&gt;r = z;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//查找操作</span></div><div class="line">node* find(node *u,<span class="keyword">int</span> k) &#123;</div><div class="line">    <span class="keyword">while</span> (u !=<span class="keyword">NULL</span> &amp;&amp; k != u-&gt;key) &#123;</div><div class="line">        <span class="keyword">if</span>(k &lt; u-&gt;key)</div><div class="line">            u = u-&gt;l;</div><div class="line">        <span class="keyword">else</span> u = u-&gt;r;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> u;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//寻找最左面的节点</span></div><div class="line">node* TreeMin(node *x) &#123;</div><div class="line">    <span class="keyword">while</span> (x-&gt;l != <span class="keyword">NULL</span>)</div><div class="line">        x = x-&gt;l;</div><div class="line">    <span class="keyword">return</span> x;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//调用这个函数 就说明x下面肯定有右节点</span></div><div class="line">node* TreeNext(node *x) &#123;</div><div class="line">    <span class="keyword">if</span>(x-&gt;r != <span class="keyword">NULL</span>)</div><div class="line">        <span class="keyword">return</span> TreeMin(x-&gt;r);</div><div class="line">    <span class="comment">/*</span></div><div class="line"><span class="comment">    node *y = x-&gt;p;</span></div><div class="line"><span class="comment">    while (y!=NULL &amp;&amp; x == y-&gt;r) &#123;</span></div><div class="line"><span class="comment">        x = y;</span></div><div class="line"><span class="comment">        y = y-&gt;p;</span></div><div class="line"><span class="comment">    &#125;</span></div><div class="line"><span class="comment">    return y;</span></div><div class="line"><span class="comment">    */</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//删除操作 ***慢慢理解</span></div><div class="line">void Delete(node *z) &#123;</div><div class="line">    <span class="comment">//y为要删除的对象 x为y子节点</span></div><div class="line">    node *y,*x;</div><div class="line"></div><div class="line">    <span class="comment">//z没有或只有一个子节点</span></div><div class="line">    <span class="keyword">if</span>(z-&gt;l == <span class="keyword">NULL</span> || z-&gt;r ==<span class="keyword">NULL</span>) y=z;</div><div class="line">    <span class="keyword">else</span> y=TreeNext(z);  <span class="comment">//肯定有两个子节点</span></div><div class="line"></div><div class="line">    <span class="comment">//确定y的子节点x</span></div><div class="line">    <span class="keyword">if</span>(y-&gt;l != <span class="keyword">NULL</span>) &#123;</div><div class="line">        x = y-&gt;l;</div><div class="line">    &#125;<span class="keyword">else</span> x = y-&gt;r;</div><div class="line"></div><div class="line">    <span class="comment">//删除y 就是 x 接到y的父节点上</span></div><div class="line">    <span class="keyword">if</span>(x != <span class="keyword">NULL</span>) &#123;</div><div class="line">        x-&gt;p = y-&gt;p;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span>(y-&gt;p == <span class="keyword">NULL</span>) &#123;</div><div class="line">        root = x;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span> &#123;</div><div class="line">        <span class="comment">//把x接到y的父节点下</span></div><div class="line">        <span class="keyword">if</span>(y == y-&gt;p-&gt;l)</div><div class="line">            y-&gt;p-&gt;l = x;</div><div class="line">        <span class="keyword">else</span></div><div class="line">            y-&gt;p-&gt;r = x;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span>(y != z)</div><div class="line">        z-&gt;key = y-&gt;key;</div><div class="line">    free(y);</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">//中序遍历</span></div><div class="line">void inorder(node *u) &#123;</div><div class="line">    <span class="keyword">if</span>(u == <span class="keyword">NULL</span>) <span class="keyword">return</span>;</div><div class="line">    inorder(u-&gt;l);</div><div class="line">    printf(<span class="string">" %d"</span>,u-&gt;key);</div><div class="line">    inorder(u-&gt;r);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//先序遍历</span></div><div class="line">void preorder(node *u) &#123;</div><div class="line">    <span class="keyword">if</span>(u == <span class="keyword">NULL</span>) <span class="keyword">return</span>;</div><div class="line">    printf(<span class="string">" %d"</span>,u-&gt;key);</div><div class="line">    preorder(u-&gt;l);</div><div class="line">    preorder(u-&gt;r);</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">int</span> main ()</div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> n,i,x;</div><div class="line">    string com;</div><div class="line">    scanf(<span class="string">"%d"</span>,&amp;n);</div><div class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;n; i++)</div><div class="line">    &#123;</div><div class="line">        cin &gt;&gt; com;</div><div class="line">        <span class="keyword">if</span>(com == <span class="string">"insert"</span>) &#123;</div><div class="line">            scanf(<span class="string">"%d"</span>,&amp;x);</div><div class="line">            insert(x);</div><div class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(com == <span class="string">"find"</span>) &#123;</div><div class="line">            scanf(<span class="string">"%d"</span>,&amp;x);</div><div class="line">            node *f = find(root,x);</div><div class="line">            <span class="keyword">if</span>(f != <span class="keyword">NULL</span>)</div><div class="line">                puts(<span class="string">"yes"</span>);</div><div class="line">            <span class="keyword">else</span></div><div class="line">                puts(<span class="string">"no"</span>);</div><div class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(com == <span class="string">"delete"</span>) &#123;</div><div class="line">            scanf(<span class="string">"%d"</span>,&amp;x);</div><div class="line">            Delete(find(root,x));</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(com == <span class="string">"print"</span>) &#123;</div><div class="line">            inorder(root); puts(<span class="string">""</span>);</div><div class="line">            preorder(root); puts(<span class="string">""</span>);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="二叉堆"><a href="#二叉堆" class="headerlink" title="二叉堆"></a>二叉堆</h3><p>最大堆： 结点的键值小于等于父节点的键值<br>最小堆： 结点的键值大于等于父节点的键值<br><figure class="highlight cpp"><table><tr><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX 20000</span></div><div class="line"></div><div class="line"><span class="keyword">int</span> H,A[MAX+<span class="number">1</span>];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">maxHeapify</span><span class="params">(<span class="keyword">int</span> i)</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">    <span class="keyword">int</span> l,r,largest;</div><div class="line">    l= <span class="number">2</span>*i, r =<span class="number">2</span>*i+<span class="number">1</span>;</div><div class="line">    <span class="keyword">if</span>(l&lt;=H &amp;&amp; A[l] &gt; A[i])</div><div class="line">        largest = l;</div><div class="line">    <span class="keyword">else</span></div><div class="line">        largest = i;</div><div class="line">    <span class="keyword">if</span>(r&lt;=H &amp;&amp; A[r] &gt; A[largest]) largest = r;</div><div class="line">    <span class="keyword">if</span>(largest != i)</div><div class="line">    &#123;</div><div class="line">        swap(A[i],A[largest]);</div><div class="line">        maxHeapify(largest);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">    <span class="built_in">cin</span> &gt;&gt; H;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=H;i++)</div><div class="line">        <span class="built_in">cin</span> &gt;&gt; A[i];</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=H/<span class="number">2</span>; i&gt;=<span class="number">1</span>; i--)</div><div class="line">        maxHeapify(i);</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=H; i++)</div><div class="line">        <span class="built_in">cout</span> &lt;&lt;<span class="string">" "</span>&lt;&lt;A[i];</div><div class="line">    </div><div class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="堆排序"><a href="#堆排序" class="headerlink" title="堆排序"></a>堆排序</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX 20000</span></div><div class="line"></div><div class="line"><span class="keyword">int</span> H,A[MAX+<span class="number">1</span>];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">maxHeapify</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> len)</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">    <span class="keyword">int</span> l,r,largest;</div><div class="line">    l= <span class="number">2</span>*i+<span class="number">1</span>, r =<span class="number">2</span>*i+<span class="number">2</span>;</div><div class="line">    <span class="keyword">if</span>(l&lt;len &amp;&amp; A[l] &gt; A[i])</div><div class="line">        largest = l;</div><div class="line">    <span class="keyword">else</span></div><div class="line">        largest = i;</div><div class="line">    <span class="keyword">if</span>(r&lt;len &amp;&amp; A[r] &gt; A[largest]) largest = r;</div><div class="line">    <span class="keyword">if</span>(largest != i)</div><div class="line">    &#123;</div><div class="line">        swap(A[i],A[largest]);</div><div class="line">        maxHeapify(largest,len);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">    <span class="comment">//先把最大值放到顶端</span></div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=H/<span class="number">2</span><span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)</div><div class="line">            maxHeapify(i,H);</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;H;i++)&#123;</div><div class="line">        <span class="built_in">cout</span> &lt;&lt;<span class="string">" "</span>&lt;&lt;A[i];</div><div class="line">    &#125;<span class="built_in">cout</span>&lt;&lt; <span class="built_in">endl</span>;</div><div class="line"></div><div class="line">    <span class="comment">//每次把最大的放到最后</span></div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=H<span class="number">-1</span>;i&gt;<span class="number">0</span>;i--)</div><div class="line">    &#123;</div><div class="line">        swap(A[<span class="number">0</span>],A[i]);</div><div class="line">        maxHeapify(<span class="number">0</span>,i);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;H;i++)&#123;</div><div class="line">        <span class="built_in">cout</span> &lt;&lt;<span class="string">" "</span>&lt;&lt;A[i];</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">    <span class="built_in">cin</span> &gt;&gt; H;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;H;i++)</div><div class="line">        <span class="built_in">cin</span> &gt;&gt; A[i];</div><div class="line">    solve();</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="排序总结"><a href="#排序总结" class="headerlink" title="排序总结"></a>排序总结</h3><p><img src="https://img-blog.csdn.net/20180324082059158?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0JJTkcxOTI2/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="排序总结"></p>
<h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>下个月没什么特别多的事情，入门Java和Linux了，希望以后能用Java做题吧(熟悉一下Java，嘿嘿)</p>
]]></content>
    
    <summary type="html">
    
      BinarySearchTree的插入，查找，删除操作和Heap学习
    
    </summary>
    
    
      <category term="Algorithm" scheme="http://draymonder.me/tags/Algorithm/"/>
    
  </entry>
  
  <entry>
    <title>Digital Ocean 购买VPS搭建SS</title>
    <link href="http://draymonder.me/2018/03/11/Do-ss/"/>
    <id>http://draymonder.me/2018/03/11/Do-ss/</id>
    <published>2018-03-11T07:00:00.000Z</published>
    <updated>2018-03-11T06:00:50.246Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>因为要做项目，所以买了Vps<br>考虑到国内的备案问题，果断听从俺班妹子的意见买了Do的最便宜的VPS</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>首先要对机房测速，挨个测试<br>最后使用的旧金山的机房，Unbuntu的系统<br>接着按照 <a href="http://blog.csdn.net/Jayson_Leang/article/details/78243554?locationNum=6&fps=1" target="_blank" rel="external"> 搭建SS </a><br>顺利搭建了梯子，成功在YouTuBe上看起了1080p MV，美滋滋</p>
<p>后续还会写php+mysql的环境配置</p>
]]></content>
    
    <summary type="html">
    
      Digital Ocean 购买VPS搭建SS梯子
    
    </summary>
    
    
      <category term="Vps" scheme="http://draymonder.me/tags/Vps/"/>
    
  </entry>
  
  <entry>
    <title>校赛补题记录</title>
    <link href="http://draymonder.me/2018/03/10/the-BinarySearch/"/>
    <id>http://draymonder.me/2018/03/10/the-BinarySearch/</id>
    <published>2018-03-10T15:59:59.000Z</published>
    <updated>2018-03-10T10:56:07.500Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>  好久没写过算法题了，然后抱着水水的态度去参加了校赛，整体难度还可以，<br>  可能是我太菜了，很多简单题，我都没能顺利地ac掉。<br>  不过心态还是好的，继续努力加油吧。</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="一起来数数字"><a href="#一起来数数字" class="headerlink" title="一起来数数字"></a>一起来数数字</h3><h4 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h4><p>把人排成一排，从左到右从1开始报数，选择三个不同的数字x，y，z。从1开始报数，遇到x的倍数，y的倍数，z的倍数就跳过。比如x=2，y=3，z=5，第一个人报1，第二个人跳过2,3,4,5,6，报7，第三个人跳过8,9,10，报11。<br>给出一个n，问你第n个人报的数字是多少。 </p>
<h4 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h4><p>第一行给出一个T（T≤300），代表样例组数，每组样例给出一个正整数n（n≤1e9）。接下来T行，每行输入四个数字x，y，z，n(其中x,y,z大于1且小于200000),代表题目描述中的意思</p>
<h4 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h4><p>输出第n个人报的数字</p>
<h4 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h4><figure class="highlight basic"><table><tr><td class="code"><pre><div class="line"><span class="number">2</span></div><div class="line"><span class="symbol">2 </span><span class="number">3</span> <span class="number">5</span> <span class="number">2</span></div><div class="line"><span class="symbol">6 </span><span class="number">2</span> <span class="number">4</span> <span class="number">10000</span></div></pre></td></tr></table></figure>
<h4 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h4><figure class="highlight lsl"><table><tr><td class="code"><pre><div class="line"><span class="number">7</span></div><div class="line"><span class="number">19999</span></div></pre></td></tr></table></figure>
<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><p>刚开始以为是规律题，不做（太菜了，后来发现是之前遇到过的容斥。<br>然后手写容斥+二分，然而一直WA.<br>比赛完，问队友，才知道自己容斥的不对,果然还是自己太菜了。</p>
<h4 id="AC代码"><a href="#AC代码" class="headerlink" title="AC代码"></a>AC代码</h4><figure class="highlight cpp"><table><tr><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</div><div class="line">ll x,y,z,n;</div><div class="line"></div><div class="line"><span class="function">ll <span class="title">gcd</span><span class="params">(ll a,ll b)</span></span>&#123;</div><div class="line">    <span class="keyword">return</span> b==<span class="number">0</span>? a: gcd(b,a%b);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function">ll <span class="title">solve</span><span class="params">(ll b)</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">    ll ans1 = b/x + b/y + b/z;</div><div class="line"></div><div class="line">    ll xy = (x*y)/gcd(x,y);</div><div class="line">    ll xz = (x*z)/gcd(x,z);</div><div class="line">    ll yz = (y*z)/gcd(y,z);</div><div class="line">    ll ans2 = b/xy + b/yz + b/xz;</div><div class="line"></div><div class="line">    ll xyz=xy*z/gcd(xy,z);</div><div class="line">    ll ans3 = b / xyz;</div><div class="line">    <span class="keyword">return</span> ans1 -ans2 + ans3;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">    <span class="keyword">int</span> t;</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</div><div class="line">    <span class="keyword">while</span> (t--) &#123;</div><div class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld %lld %lld %lld"</span>,&amp;x,&amp;y,&amp;z,&amp;n);</div><div class="line">        ll l=<span class="number">1</span>,r=<span class="number">1e18</span>;</div><div class="line">        ll ans = <span class="number">-1</span>;</div><div class="line">        <span class="keyword">while</span> (l &lt;= r)</div><div class="line">        &#123;</div><div class="line">            ll mid = (l+r)/<span class="number">2</span>;</div><div class="line">            <span class="keyword">if</span>(mid - solve(mid) &gt;= n)&#123;</div><div class="line">                ans = mid ,r =mid<span class="number">-1</span>;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">else</span> &#123;</div><div class="line">                l = mid +<span class="number">1</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">cout</span> &lt;&lt; ans &lt;&lt;<span class="built_in">endl</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      记录校赛里面没能完成的题目
    
    </summary>
    
    
      <category term="Algorithm" scheme="http://draymonder.me/tags/Algorithm/"/>
    
  </entry>
  
  <entry>
    <title>Java入门学习(1)</title>
    <link href="http://draymonder.me/2018/03/09/Java-learning1/"/>
    <id>http://draymonder.me/2018/03/09/Java-learning1/</id>
    <published>2018-03-09T15:59:59.000Z</published>
    <updated>2018-03-14T09:28:48.322Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>因为想好自己以后的技术栈就是往Java方向学习了，所以try it.<br>不准备深入学习其他的语言了。深入一门就好了。</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="Eclipse配置"><a href="#Eclipse配置" class="headerlink" title="Eclipse配置"></a>Eclipse配置</h3><p><a href="http://blog.csdn.net/longshenlmj/article/details/52330106" target="_blank" rel="external">Eclipse配置</a></p>
<h3 id="Scanner读入"><a href="#Scanner读入" class="headerlink" title="Scanner读入"></a>Scanner读入</h3><figure class="highlight d"><table><tr><td class="code"><pre><div class="line"><span class="keyword">import</span> java.util.*;</div><div class="line"></div><div class="line">Scanner <span class="keyword">in</span> = <span class="keyword">new</span> Scanner(System.<span class="keyword">in</span>);</div><div class="line"><span class="keyword">int</span> a = <span class="keyword">in</span>.nextInt();</div><div class="line">System.<span class="keyword">out</span>.print(a);</div><div class="line"><span class="keyword">in</span>.close();</div></pre></td></tr></table></figure>
<h3 id="foreach语句"><a href="#foreach语句" class="headerlink" title="foreach语句"></a>foreach语句</h3><figure class="highlight arduino"><table><tr><td class="code"><pre><div class="line"><span class="keyword">String</span> []learn = &#123;<span class="string">"c++"</span>,<span class="string">"php"</span>,<span class="string">"python"</span>,<span class="string">"java"</span>&#125;;</div><div class="line"><span class="built_in">for</span>(<span class="keyword">String</span> i:learn) &#123;</div><div class="line">    System.out.<span class="built_in">println</span>(i);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="String类方法"><a href="#String类方法" class="headerlink" title="String类方法"></a>String类方法</h3><figure class="highlight stylus"><table><tr><td class="code"><pre><div class="line"><span class="comment">//替换字符串内容</span></div><div class="line"><span class="function"><span class="title">replace</span><span class="params">(String oldChar,String new Char)</span></span></div><div class="line"><span class="comment">//参数是regex，即基于规则表达式的替换</span></div><div class="line"><span class="function"><span class="title">replaceFirst</span><span class="params">(String regex,String replacement)</span></span></div><div class="line"><span class="function"><span class="title">replaceAll</span><span class="params">(String regex,String replacement)</span></span></div><div class="line"></div><div class="line"><span class="function"><span class="title">equals</span><span class="params">()</span></span>  <span class="comment">//判断是否相同</span></div><div class="line"><span class="function"><span class="title">equalsIgnoreCase</span><span class="params">()</span></span>  <span class="comment">//不区分大小写</span></div><div class="line"><span class="function"><span class="title">compareTo</span><span class="params">()</span></span>  </div><div class="line"><span class="comment">//按照字典序比较，str 位于 otherstr参数之前，会得到一个负整数</span></div><div class="line"><span class="comment">//str 位于 otherstr参数之后，会得到一个正整数 相等，结果为0</span></div><div class="line"></div><div class="line"><span class="function"><span class="title">indexOf</span><span class="params">(value. int fromIndex)</span></span></div><div class="line"><span class="comment">//fromIndex 表示查找时的起始索引</span></div><div class="line"><span class="function"><span class="title">lastIndexOf</span><span class="params">(value. int fromIndex)</span></span></div><div class="line"><span class="comment">//从右往左查找</span></div></pre></td></tr></table></figure>
<h3 id="字符串加密和解密"><a href="#字符串加密和解密" class="headerlink" title="字符串加密和解密"></a>字符串加密和解密</h3><figure class="highlight arduino"><table><tr><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">String</span> encrypAndDencrypt(<span class="keyword">String</span> value,<span class="keyword">char</span> secret) &#123;</div><div class="line">    <span class="keyword">byte</span>[] bt = value.getBytes();</div><div class="line">    <span class="built_in">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;bt.length;i++) &#123;</div><div class="line">        bt[i] = (<span class="keyword">byte</span>)(bt[i] ^ (<span class="keyword">int</span>)secret);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">String</span> newResult = <span class="keyword">new</span> <span class="keyword">String</span> (bt,<span class="number">0</span>,bt.length);</div><div class="line">    <span class="built_in">return</span> newResult;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="java中-和equal的区别"><a href="#java中-和equal的区别" class="headerlink" title="java中==和equal的区别"></a>java中==和equal的区别</h3><p><a href="https://www.cnblogs.com/pop822/p/6215040.html" target="_blank" rel="external"><br>java中==和equal的区别</a></p>
<h3 id="DateFormat-类"><a href="#DateFormat-类" class="headerlink" title="DateFormat 类"></a>DateFormat 类</h3><figure class="highlight gauss"><table><tr><td class="code"><pre><div class="line">在创建DateFormat对象时不能使用<span class="keyword">new</span>关键字</div><div class="line">而应该使用DateFormat类中的静态方法 getDateInstance()</div><div class="line">DateFormat df = DateFormat.getDateInstance();</div><div class="line"></div><div class="line"><span class="comment">//具体调用关系</span></div><div class="line">DateFormat df1 = DateFormat.getDateInstance(DateFormat.SHORT,Locale.CHINA);</div><div class="line">DateFormat df2 = DateFormat.getTimeInstance(DateFormat.SHORT,Locale.CHINA);</div><div class="line"></div><div class="line"><span class="keyword">String</span> <span class="built_in">date</span> = df1.<span class="keyword">format</span>(<span class="keyword">new</span> <span class="built_in">Date</span>());</div><div class="line"><span class="keyword">String</span> <span class="built_in">time</span> = df2.<span class="keyword">format</span>(<span class="keyword">new</span> <span class="built_in">Date</span>());   </div><div class="line"><span class="keyword">System</span>.out.println(<span class="built_in">date</span>+<span class="built_in">time</span>);</div></pre></td></tr></table></figure>
<h3 id="快排手搓代码"><a href="#快排手搓代码" class="headerlink" title="快排手搓代码"></a>快排手搓代码</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><div class="line"><span class="keyword">import</span> java.util.*;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> &#123;</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getMiddle</span><span class="params">(<span class="keyword">int</span>[]<span class="built_in">list</span>,<span class="keyword">int</span> low, <span class="keyword">int</span> high)</span> </span>&#123;</div><div class="line">        <span class="keyword">int</span> tmp = <span class="built_in">list</span>[low];</div><div class="line">        <span class="keyword">while</span> (low &lt; high) &#123;</div><div class="line">            <span class="keyword">while</span> (low &lt; high &amp;&amp; <span class="built_in">list</span>[high] &gt;= tmp) &#123;</div><div class="line">                high --;</div><div class="line">            &#125;</div><div class="line">            <span class="built_in">list</span>[low] = <span class="built_in">list</span>[high];</div><div class="line">            <span class="keyword">while</span> (low &lt; high &amp;&amp; <span class="built_in">list</span>[low] &lt;= tmp ) &#123;</div><div class="line">                low ++;</div><div class="line">            &#125;</div><div class="line">            <span class="built_in">list</span>[high] = <span class="built_in">list</span>[low];</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">list</span>[low] = tmp;</div><div class="line">        <span class="keyword">return</span> low;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Sort</span><span class="params">(<span class="keyword">int</span> []<span class="built_in">list</span>,<span class="keyword">int</span> low,<span class="keyword">int</span> high)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span>(low &lt; high) &#123;</div><div class="line">            <span class="keyword">int</span> mid = getMiddle(<span class="built_in">list</span>,low,high);</div><div class="line">            Sort(<span class="built_in">list</span>,low,mid<span class="number">-1</span>);</div><div class="line">            Sort(<span class="built_in">list</span>,mid+<span class="number">1</span>,high);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> </span>&#123;</div><div class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</div><div class="line">        <span class="keyword">int</span> []<span class="built_in">list</span> = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">12</span>];</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++) &#123;</div><div class="line">            <span class="built_in">list</span>[i] = in.nextInt();</div><div class="line">        &#125;</div><div class="line">        Sort(<span class="built_in">list</span>,<span class="number">0</span>,<span class="number">9</span>);</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">9</span>;i++) &#123;</div><div class="line">            System.out.print(<span class="built_in">list</span>[i] + <span class="string">" "</span>);</div><div class="line">        &#125;</div><div class="line">        in.close();</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      Java入门学习,一些记录
    
    </summary>
    
    
      <category term="Java" scheme="http://draymonder.me/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>php xml操作</title>
    <link href="http://draymonder.me/2018/03/06/the-xml/"/>
    <id>http://draymonder.me/2018/03/06/the-xml/</id>
    <published>2018-03-06T07:20:20.000Z</published>
    <updated>2018-03-06T09:13:49.970Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>xml大多用来存储数据  </p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="入门案例"><a href="#入门案例" class="headerlink" title="入门案例"></a>入门案例</h3><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span> <span class="meta">?&gt;</span></span></div><div class="line"><span class="tag">&lt;<span class="name">stu</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>draymonder<span class="tag">&lt;/<span class="name">name</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">stu</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="处理特殊字符"><a href="#处理特殊字符" class="headerlink" title="处理特殊字符"></a>处理特殊字符</h3><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">imgs</span>&gt;</span>&lt;![CDATA[$&lt;$$#@&gt;]]&gt;<span class="tag">&lt;/<span class="name">imgs</span>&gt;</span></div><div class="line"></div><div class="line">CDATA的基本语法</div><div class="line">&lt;![CDATA[内容]]&gt;</div><div class="line"></div><div class="line">面试题: 如何使用xml文件来传递，保存一个图片</div><div class="line">答: 使用程序先读入到内存</div><div class="line">然后保存到xml的&lt;![CDATA[文件内容]]&gt;中</div></pre></td></tr></table></figure>
<h3 id="xml的PI处理指令"><a href="#xml的PI处理指令" class="headerlink" title="xml的PI处理指令"></a>xml的PI处理指令</h3><figure class="highlight processing"><table><tr><td class="code"><pre><div class="line">通过<span class="literal">PI</span>指令来引入CSS样式文件：</div><div class="line"></div><div class="line"><span class="literal">PI</span>指令的弊端：</div><div class="line">    只对英文的标签起作用，对中文的标签不起作用。 </div><div class="line"></div><div class="line"><span class="comment">//和html引用css大同小异</span></div><div class="line">&lt;?xml-stylesheet  type=<span class="string">"text/css"</span> href=<span class="string">"txt.css"</span>?&gt;  </div><div class="line"></div><div class="line"><span class="comment">//txt.css内容</span></div><div class="line">name&#123;</div><div class="line">    <span class="built_in">background</span>-<span class="built_in">color</span>:<span class="built_in">red</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line">age&#123;</div><div class="line">    <span class="built_in">background</span>-<span class="built_in">color</span>:<span class="built_in">green</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="dtd-Document-Type-Definition"><a href="#dtd-Document-Type-Definition" class="headerlink" title="dtd (Document Type Definition"></a>dtd (Document Type Definition</h3><p>为了约束xml文件，使xml语义合法<br><a href="http://blog.csdn.net/gavin_john/article/details/51532756" target="_blank" rel="external">dtd详解</a><br><figure class="highlight dts"><table><tr><td class="code"><pre><div class="line">基本语法</div><div class="line"><span class="params">&lt;!ELEMENT 元素名 类型&gt;</span> <span class="comment">//元素约束</span></div><div class="line"><span class="params">&lt;!ATTLIST 元素名&gt;</span> <span class="comment">//属性约束</span></div><div class="line"><span class="params">&lt;!ENTITY 元素名 "引用内容"&gt;</span> <span class="comment">//用元素名来表示引用的内容</span></div></pre></td></tr></table></figure></p>
<h3 id="phpDom快速入门"><a href="#phpDom快速入门" class="headerlink" title="phpDom快速入门"></a>phpDom快速入门</h3><figure class="highlight php"><table><tr><td class="code"><pre><div class="line">$xmldoc = <span class="keyword">new</span> DomDocument();</div><div class="line">$xmldoc-&gt;load(<span class="string">"test.xml"</span>);</div><div class="line"><span class="comment">//读文件的时候用load方法</span></div><div class="line"><span class="comment">//读字符串的时候用 loadXML方法 </span></div><div class="line"><span class="comment">//eg: $xmldoc-&gt;loadXML('&lt;root&gt;&lt;node/&gt;&lt;/root&gt;');</span></div><div class="line"></div><div class="line"><span class="comment">//找到root节点</span></div><div class="line">$nodeLists=$xmldoc-&gt;getElementsByTagName(<span class="string">"stu"</span>); <span class="comment">//返回的是结果集合 </span></div><div class="line">$nodeList = $nodeLists-&gt;item(<span class="number">0</span>); </div><div class="line"><span class="comment">//上面直接就已经找到root节点了</span></div><div class="line"></div><div class="line"><span class="comment">//新增name节点</span></div><div class="line">$node_name = $xmldoc-&gt;createElement(<span class="string">"name"</span>);</div><div class="line">$node_name-&gt;nodeValue = <span class="string">"我喜欢你"</span>;</div><div class="line"></div><div class="line"><span class="comment">//新增age节点</span></div><div class="line">$node_age = $xmldoc-&gt;createElement(<span class="string">"age"</span>);</div><div class="line">$node_age-&gt;nodeValue = <span class="string">"20"</span>;</div><div class="line"></div><div class="line"><span class="comment">//root节点下挂载 name节点和age节点</span></div><div class="line">$root-&gt;appendChild($node_name); </div><div class="line">$root-&gt;appendChild($node_age);</div><div class="line"></div><div class="line"><span class="comment">//内存中修改完毕以后 还要保存文件内容</span></div><div class="line">$xmldoc-&gt;save(<span class="string">"test.xml"</span>);</div><div class="line"></div><div class="line"><span class="comment">//删除操作</span></div><div class="line">$test-&gt;parentNode-&gt;removeChild($test);</div><div class="line"></div><div class="line"><span class="comment">//更新操作</span></div><div class="line">找到那个需要修改的节点 直接改 nodeValue属性就可以</div><div class="line"></div><div class="line"><span class="comment">//设置属性</span></div><div class="line">setAttribute (string $name ,string $value) </div><div class="line">添加属性为$name 属性值$value的属性</div></pre></td></tr></table></figure>
<h3 id="xpath"><a href="#xpath" class="headerlink" title="xpath"></a>xpath</h3><p>php dom技术可以跨层取出，但是不能保持层次关系，使用xpath可以解决<br><figure class="highlight php"><table><tr><td class="code"><pre><div class="line">这种技术相当于是知道节点所在的层级，然后通过层级关系来找相应的节点</div><div class="line">$xmldoc = <span class="keyword">new</span> DOMDocument();</div><div class="line">$xmldoc-&gt;load(<span class="string">"test.xml"</span>);</div><div class="line">$xpath = <span class="keyword">new</span> DOMXPath($xmldoc);</div><div class="line">$node_list = $xpath-&gt;query(<span class="string">"/stu"</span>);</div><div class="line"><span class="keyword">echo</span> $node_list-&gt;length;</div></pre></td></tr></table></figure></p>
<h3 id="SimpleXML"><a href="#SimpleXML" class="headerlink" title="SimpleXML"></a>SimpleXML</h3><p>以面向对象方式来操作xml文件<br><figure class="highlight php"><table><tr><td class="code"><pre><div class="line"><span class="comment">//装载文件</span></div><div class="line">$stu = simplexml_load_file(<span class="string">"test.xml"</span>);</div><div class="line">$name  = $stu-&gt;name;</div><div class="line"></div><div class="line">var_dump($name);</div><div class="line"><span class="keyword">foreach</span> ($name <span class="keyword">as</span> $value) &#123;</div><div class="line">    <span class="keyword">echo</span> <span class="string">"$value &lt;br&gt;"</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//还有装载方式从DOM对象</span></div><div class="line">simplexml_import_dom</div><div class="line"></div><div class="line"><span class="comment">//装载字符串</span></div><div class="line">simplexml_load_string</div></pre></td></tr></table></figure></p>
<h3 id="超链接统一打开问题"><a href="#超链接统一打开问题" class="headerlink" title="超链接统一打开问题"></a>超链接统一打开问题</h3><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">base</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div></pre></td></tr></table></figure>
<h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>比预想的进度晚了好多，寒假也没有接触爬虫和Java,Linux也是空手而归..<br>新的学期还有好多好多的比赛，希望自己能坚持下去，Just do what you want to do.<br>没有那么多的约束，尽情去展现自己的水平吧。<br>To learn,to try.</p>
]]></content>
    
    <summary type="html">
    
      php 中xml编程操作
    
    </summary>
    
    
      <category term="php" scheme="http://draymonder.me/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>PHP 绘图技术</title>
    <link href="http://draymonder.me/2018/03/01/the-gd/"/>
    <id>http://draymonder.me/2018/03/01/the-gd/</id>
    <published>2018-03-01T08:00:00.000Z</published>
    <updated>2018-03-01T09:01:07.961Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>  学习矢量图片(验证码)，报表的绘制，生成。</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><figure class="highlight gcode"><table><tr><td class="code"><pre><div class="line">创建画布</div><div class="line">会只需要的各种图形<span class="comment">(圆，直线，矩形，弧线，扇形)</span></div><div class="line">输出图像到网页，也可以另存</div><div class="line">销毁图片<span class="comment">(释放内存)</span></div></pre></td></tr></table></figure>
<h3 id="图片格式"><a href="#图片格式" class="headerlink" title="图片格式"></a>图片格式</h3><figure class="highlight lsl"><table><tr><td class="code"><pre><div class="line">gif 图片压缩率高，</div><div class="line">但是只能显示<span class="number">256</span>色可能造成颜色丢失，但可以显示动画</div><div class="line"></div><div class="line">jpg/jpeg 图片的压缩率高，可以用较小的文件来显示</div><div class="line">网页上用的比较多</div><div class="line"></div><div class="line">png，高仿真</div><div class="line">综合了gif和jpg的优势，但是不能显示动画</div></pre></td></tr></table></figure>
<h3 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h3><figure class="highlight shell"><table><tr><td class="code"><pre><div class="line">创建画布</div><div class="line"><span class="meta">$</span><span class="bash">img = imagecreatetruecolor(100,100);</span></div><div class="line"></div><div class="line">取色</div><div class="line"><span class="meta">$</span><span class="bash">red = imagecolorallocate(<span class="variable">$img</span>, 255, 0, 0);</span></div><div class="line"></div><div class="line">画图</div><div class="line">•imagefilledarc — 画一椭圆弧且填充</div><div class="line">•imagefilledellipse — 画一椭圆并填充</div><div class="line">•imagefilledpolygon — 画一多边形并填充</div><div class="line">•imagefilledrectangle — 画一矩形并填充</div><div class="line"></div><div class="line">输出到浏览器</div><div class="line">header("content-type: image/png");</div><div class="line"><span class="meta">imagepng($</span><span class="bash">img);</span></div><div class="line"></div><div class="line">销毁</div><div class="line"><span class="meta">imagedestroy($</span><span class="bash">img);</span></div></pre></td></tr></table></figure>
<h3 id="图片到画布"><a href="#图片到画布" class="headerlink" title="图片到画布"></a>图片到画布</h3><figure class="highlight gams"><table><tr><td class="code"><pre><div class="line"><span class="meta"><span class="meta-keyword">$srcImage</span> = imagecreatefromgif(filename);</span></div><div class="line"><span class="meta"><span class="meta-keyword">$srcImage</span>_info = getimagesize(filename);</span></div><div class="line">imagecopy(dst_im, src_im, dst_x, dst_y, </div><div class="line">    src_x, src_y, src_w, src_h);</div><div class="line">具体参数含义 不懂看文档</div></pre></td></tr></table></figure>
<h3 id="写字"><a href="#写字" class="headerlink" title="写字"></a>写字</h3><figure class="highlight mel"><table><tr><td class="code"><pre><div class="line">imagettftext(<span class="keyword">image</span>, <span class="keyword">size</span>, <span class="keyword">angle</span>, x, y, </div><div class="line">    <span class="keyword">color</span>, fontfile, <span class="keyword">text</span>)</div></pre></td></tr></table></figure>
<h3 id="生成验证码"><a href="#生成验证码" class="headerlink" title="生成验证码"></a>生成验证码</h3><figure class="highlight mel"><table><tr><td class="code"><pre><div class="line">&lt;?php</div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">    * Created by PhpStorm.</span></div><div class="line"><span class="comment">    * User: draymonder</span></div><div class="line"><span class="comment">    * Date: 2018/3/1</span></div><div class="line"><span class="comment">    * Time: 15:15</span></div><div class="line"><span class="comment">    */</span></div><div class="line">    $checkcode =<span class="string">""</span>;</div><div class="line">    <span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;<span class="number">4</span>;$i++)&#123;</div><div class="line">        $checkcode.= dechex(<span class="keyword">rand</span>(<span class="number">0</span>,<span class="number">15</span>));</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    $img = imagecreatetruecolor(<span class="number">200</span>,<span class="number">30</span>);</div><div class="line"></div><div class="line">    <span class="comment">//背景颜色</span></div><div class="line">    $bgcolor = imagecolorallocate($img,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>);</div><div class="line">    imagefill($img,<span class="number">0</span>,<span class="number">0</span>,$bgcolor);</div><div class="line"></div><div class="line">    <span class="comment">//添加干扰线</span></div><div class="line">    <span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;<span class="number">10</span>;$i++)&#123;</div><div class="line">        $color = imagecolorallocate($img,<span class="keyword">rand</span>(<span class="number">0</span>,<span class="number">255</span>),<span class="keyword">rand</span>(<span class="number">0</span>,<span class="number">255</span>),<span class="keyword">rand</span>(<span class="number">0</span>,<span class="number">255</span>));</div><div class="line">        imageline($img,<span class="keyword">rand</span>(<span class="number">0</span>,<span class="number">200</span>),<span class="keyword">rand</span>(<span class="number">0</span>,<span class="number">30</span>),<span class="keyword">rand</span>(<span class="number">0</span>,<span class="number">200</span>),<span class="keyword">rand</span>(<span class="number">0</span>,<span class="number">30</span>),$color);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">//白色，字体颜色</span></div><div class="line">    $white = imagecolorallocate($img,<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>);</div><div class="line">    <span class="comment">//添加字符串</span></div><div class="line">    imagestring($img,<span class="keyword">rand</span>(<span class="number">4</span>,<span class="number">6</span>),<span class="keyword">rand</span>(<span class="number">0</span>,<span class="number">180</span>),<span class="keyword">rand</span>(<span class="number">0</span>,<span class="number">20</span>),$checkcode,$white);</div><div class="line">    header(<span class="string">"content-type: image/png"</span>);</div><div class="line">    imagepng($img);</div><div class="line">    imagedestroy($img);</div><div class="line">?&gt;</div></pre></td></tr></table></figure>
<h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>  从现在开始，一切都还不晚！前半生与后半生的分界线是在哪里？<br>答：此时此刻。</p>
]]></content>
    
    <summary type="html">
    
      php绘图的基本原理和步骤
    
    </summary>
    
    
      <category term="php" scheme="http://draymonder.me/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>php 文件操作</title>
    <link href="http://draymonder.me/2018/02/27/the-io/"/>
    <id>http://draymonder.me/2018/02/27/the-io/</id>
    <published>2018-02-27T10:00:00.000Z</published>
    <updated>2018-02-28T05:43:45.544Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>  文件，保存数据（二进制数据，文本数据）<br>  文件在程序中是以流的形式来操作的</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法"></a>基本用法</h3><figure class="highlight awk"><table><tr><td class="code"><pre><div class="line">date_default_timezone_set(<span class="string">"PRC"</span>); </div><div class="line"><span class="variable">$path</span> = <span class="string">"test.txt"</span>;</div><div class="line"><span class="variable">$fp</span> = fopen(<span class="variable">$path</span>,<span class="string">"r"</span>); <span class="regexp">//</span>打开文件</div><div class="line"><span class="variable">$file_info</span> = fstat(<span class="variable">$fp</span>); <span class="regexp">//</span>读取资源信息</div><div class="line"><span class="regexp">//</span> echo <span class="string">"&lt;pre&gt;"</span>;</div><div class="line"><span class="regexp">//</span> var_dump(<span class="variable">$file_info</span>);</div><div class="line"><span class="regexp">//</span> echo <span class="string">"&lt;/pre&gt;"</span>;</div><div class="line">echo <span class="string">"&lt;br&gt;上次修改时间"</span>.date(<span class="string">"Y-m-d H:i:s"</span>,<span class="variable">$file_info</span>[<span class="string">'atime'</span>]);</div><div class="line">fclose(<span class="variable">$fp</span>);</div><div class="line"></div><div class="line">[atime] 文件上一次被访问的时间</div><div class="line">[mtime] 文件上一次内容被修改的时间</div><div class="line">[ctime] 文件上一次 文件所有者<span class="regexp">/文件所在组 修改/</span>change</div><div class="line">单用户可以认为是创建时间</div></pre></td></tr></table></figure>
<h3 id="读文件"><a href="#读文件" class="headerlink" title="读文件"></a>读文件</h3><figure class="highlight mel"><table><tr><td class="code"><pre><div class="line">第一种方法</div><div class="line">$path = <span class="string">"test.txt"</span>;</div><div class="line"><span class="keyword">if</span>(file_exists($path))&#123;</div><div class="line">    $fp = <span class="keyword">fopen</span>($path,<span class="string">"a+"</span>);</div><div class="line">    $con = <span class="keyword">fread</span>($fp, filesize($path));</div><div class="line">    $con = str_ireplace(<span class="string">"\r\n"</span>,<span class="string">"&lt;br&gt;"</span>,$con);</div><div class="line">    echo <span class="string">"$con"</span>;</div><div class="line">&#125;</div><div class="line"><span class="keyword">fclose</span>($fp);</div><div class="line"></div><div class="line">第二种方法</div><div class="line">$con = file_get_contents($path);</div><div class="line">$con = str_ireplace(<span class="string">"\r\n"</span>,<span class="string">"&lt;br&gt;"</span>,$con);</div><div class="line">echo $con;</div><div class="line"></div><div class="line">第三种方法</div><div class="line">$buffer = <span class="number">1024</span>;</div><div class="line">$str = <span class="string">""</span>;</div><div class="line"><span class="keyword">while</span> (!<span class="keyword">feof</span>($fp))&#123;</div><div class="line">    $str.= <span class="keyword">fread</span>($fp,$buffer);</div><div class="line">&#125;</div><div class="line">$con = str_ireplace(<span class="string">"\r\n"</span>,<span class="string">"&lt;br&gt;"</span>,$str);</div><div class="line">echo $con;</div></pre></td></tr></table></figure>
<h3 id="写文件"><a href="#写文件" class="headerlink" title="写文件"></a>写文件</h3><figure class="highlight mel"><table><tr><td class="code"><pre><div class="line">第一种方法</div><div class="line">$path = <span class="string">"test.txt"</span>;</div><div class="line"><span class="keyword">if</span>(file_exists($path))&#123;</div><div class="line">    $fp = <span class="keyword">fopen</span>($path,<span class="string">"a+"</span>);</div><div class="line">    $con = <span class="string">"你好"</span>;</div><div class="line">    <span class="keyword">fwrite</span>($fp, $con);</div><div class="line">&#125;</div><div class="line"><span class="keyword">fclose</span>($fp);</div><div class="line"></div><div class="line">a: append w: write</div><div class="line"></div><div class="line">第二种方法(直接添加字符串)</div><div class="line">$path = <span class="string">"test.txt"</span>;</div><div class="line">$con = <span class="string">"北京你好\r\n"</span>;</div><div class="line">file_put_contents($path, $con,FILE_APPEND);</div></pre></td></tr></table></figure>
<h3 id="拷贝图片"><a href="#拷贝图片" class="headerlink" title="拷贝图片"></a>拷贝图片</h3><figure class="highlight autoit"><table><tr><td class="code"><pre><div class="line">$path = <span class="string">"C:\\Users\\ixiao\\Pictures\\Kyire\\kyire.jpeg"</span><span class="comment">;</span></div><div class="line"><span class="keyword">if</span>(!copy($path,<span class="string">"d:\\1.jpeg"</span>))&#123;</div><div class="line">    echo <span class="string">"error"</span><span class="comment">;</span></div><div class="line">&#125;<span class="keyword">else</span>&#123;</div><div class="line">    echo <span class="string">"ok"</span><span class="comment">;</span></div><div class="line">&#125;</div><div class="line"></div><div class="line">如果有中文路径，那么用</div><div class="line"><span class="built_in">string</span> iconv ( <span class="built_in">string</span> $in_charset , <span class="built_in">string</span> $out_charset </div><div class="line">    , <span class="built_in">string</span> $str )</div><div class="line">将字符串 str 从 in_charset 转换编码到 out_charset。</div></pre></td></tr></table></figure>
<h3 id="创建-删除文件夹"><a href="#创建-删除文件夹" class="headerlink" title="创建/删除文件夹"></a>创建/删除文件夹</h3><figure class="highlight stylus"><table><tr><td class="code"><pre><div class="line"><span class="function"><span class="title">madir</span><span class="params">(dirname)</span></span></div><div class="line"><span class="function"><span class="title">rmdir</span><span class="params">(dirname)</span></span></div></pre></td></tr></table></figure>
<h3 id="创建-删除文件"><a href="#创建-删除文件" class="headerlink" title="创建/删除文件"></a>创建/删除文件</h3><figure class="highlight mel"><table><tr><td class="code"><pre><div class="line">$fp = <span class="keyword">fopen</span>($path,<span class="string">"a+"</span>);</div><div class="line"><span class="keyword">fwrite</span>($fp,$string);</div><div class="line"><span class="keyword">fclose</span>($fp);</div><div class="line"></div><div class="line"><span class="keyword">if</span>(is_file($path))&#123;</div><div class="line">    unlink($path);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="用form上传文件"><a href="#用form上传文件" class="headerlink" title="用form上传文件"></a>用form上传文件</h3><figure class="highlight bash"><table><tr><td class="code"><pre><div class="line">&lt;form action=<span class="string">""</span> enctype=<span class="string">"multipart/form-data"</span> method=<span class="string">"post"</span>&gt;</div><div class="line">    &lt;input <span class="built_in">type</span>=<span class="string">"file"</span> name=<span class="string">"myfile"</span>&gt;</div><div class="line">    &lt;input <span class="built_in">type</span>=<span class="string">"submit"</span>&gt;</div><div class="line">&lt;/form&gt;</div><div class="line"></div><div class="line">用<span class="variable">$_FILES</span>来记录上传的文件</div><div class="line"><span class="keyword">if</span>(is_uploaded_file(<span class="variable">$_FILES</span>[<span class="string">'myfile'</span>][<span class="string">'tmp_name'</span>]))&#123;</div><div class="line">    <span class="variable">$uploaded_file</span> = <span class="variable">$_FILES</span>[<span class="string">'myfile'</span>][<span class="string">'tmp_name'</span>];</div><div class="line">    <span class="variable">$move_to_file</span> = <span class="variable">$_SERVER</span>[<span class="string">'DOCUMENT_ROOT'</span>].<span class="string">"file/"</span>.</div><div class="line">    iconv(<span class="string">"utf-8"</span>,<span class="string">"gb2312"</span>,<span class="variable">$_FILES</span>[<span class="string">'myfile'</span>][<span class="string">'name'</span>]);</div><div class="line">    move_uploaded_file(<span class="variable">$uploaded_file</span>, <span class="variable">$move_to_file</span>);</div><div class="line">&#125;</div><div class="line">控制用户上传的类型，大小</div><div class="line">防止重名文件的覆盖，以及按照用户ID来建立文件夹</div><div class="line"></div><div class="line">数据库存放 文件的path，user，introduction</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      php 中对文件操作
    
    </summary>
    
    
      <category term="php" scheme="http://draymonder.me/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>Cookie 和 Session</title>
    <link href="http://draymonder.me/2018/02/27/the-cookie-and-session/"/>
    <id>http://draymonder.me/2018/02/27/the-cookie-and-session/</id>
    <published>2018-02-27T08:00:00.000Z</published>
    <updated>2018-02-27T04:32:35.621Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>会话支持在 PHP 中是在并发访问时由一个方法来保存某些数据.从而使你能够构建更多的定制程序 从而提高你的 web 网站的吸引力.<br>cookie 是一种在远程浏览器端储存数据并以此来跟踪和识别用户的机制。</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="Cookie"><a href="#Cookie" class="headerlink" title="Cookie"></a>Cookie</h3><h4 id="Setting-new-cookie"><a href="#Setting-new-cookie" class="headerlink" title="Setting new cookie"></a>Setting new cookie</h4><figure class="highlight applescript"><table><tr><td class="code"><pre><div class="line"> =============================</div><div class="line">&lt;?php </div><div class="line"> setcookie(<span class="string">"name"</span>,<span class="string">"value"</span>,<span class="built_in">time</span>()+$int);</div><div class="line">/*<span class="built_in">name</span> <span class="keyword">is</span> your cookie's <span class="built_in">name</span></div><div class="line"> value <span class="keyword">is</span> cookie's value</div><div class="line"> $int <span class="keyword">is</span> <span class="built_in">time</span> <span class="keyword">of</span> cookie expires*/</div><div class="line">?&gt;</div></pre></td></tr></table></figure>
<h4 id="Getting-Cookie"><a href="#Getting-Cookie" class="headerlink" title="Getting Cookie"></a>Getting Cookie</h4><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line"> =============================</div><div class="line"><span class="php"><span class="meta">&lt;?php</span> </span></div><div class="line"><span class="php"><span class="keyword">echo</span> $_COOKIE[<span class="string">"your cookie name"</span>];</span></div><div class="line"><span class="php"><span class="meta">?&gt;</span></span></div></pre></td></tr></table></figure>
<h4 id="Updating-Cookie"><a href="#Updating-Cookie" class="headerlink" title="Updating Cookie"></a>Updating Cookie</h4><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line"> =============================</div><div class="line"><span class="php"><span class="meta">&lt;?php</span> </span></div><div class="line"><span class="php"> setcookie(<span class="string">"color"</span>,<span class="string">"red"</span>);</span></div><div class="line"><span class="php"> <span class="keyword">echo</span> $_COOKIE[<span class="string">"color"</span>];</span></div><div class="line"><span class="php"><span class="comment">/*color is red*/</span></span></div><div class="line"><span class="php"> <span class="comment">/* your codes and functions*/</span></span></div><div class="line"><span class="php">setcookie(<span class="string">"color"</span>,<span class="string">"blue"</span>);</span></div><div class="line"><span class="php"> <span class="keyword">echo</span> $_COOKIE[<span class="string">"color"</span>];</span></div><div class="line"><span class="php"><span class="comment">/*new color is blue*/</span></span></div><div class="line"><span class="php"><span class="meta">?&gt;</span></span></div></pre></td></tr></table></figure>
<h4 id="Deleting-Cookie"><a href="#Deleting-Cookie" class="headerlink" title="Deleting Cookie"></a>Deleting Cookie</h4><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line"> ==============================</div><div class="line"><span class="php"><span class="meta">&lt;?php</span> </span></div><div class="line"><span class="php"><span class="keyword">unset</span>($_COOKIE[<span class="string">"yourcookie"</span>]);</span></div><div class="line"><span class="php"><span class="comment">/*Or*/</span></span></div><div class="line"><span class="php">setcookie(<span class="string">"yourcookie"</span>,<span class="string">"yourvalue"</span>,time()<span class="number">-1</span>);</span></div><div class="line"><span class="php"><span class="comment">/*it expired so it's deleted*/</span></span></div><div class="line"><span class="php"><span class="meta">?&gt;</span></span></div></pre></td></tr></table></figure>
<h3 id="Session"><a href="#Session" class="headerlink" title="Session"></a>Session</h3><h4 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法"></a>基本用法</h4><figure class="highlight shell"><table><tr><td class="code"><pre><div class="line">创建</div><div class="line">session_start();</div><div class="line"><span class="meta">$</span><span class="bash">_SESSION[<span class="string">'name'</span>] = <span class="string">"draymonder"</span>;</span></div><div class="line"></div><div class="line">如果要取出对象，则需要实现申明一下类的定义信息</div><div class="line"></div><div class="line">删除</div><div class="line"><span class="meta">unset($</span><span class="bash">_SESSION[<span class="string">'name'</span>]);</span></div><div class="line"></div><div class="line">使用时候要开启</div><div class="line">session_start();</div></pre></td></tr></table></figure>
<h4 id="session-unset-和-session-destroy之间的区别"><a href="#session-unset-和-session-destroy之间的区别" class="headerlink" title="session_unset 和 session_destroy之间的区别"></a>session_unset 和 session_destroy之间的区别</h4><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><div class="line">  session_<span class="keyword">unset</span>只是清除sesison的使用。 会话仍在用户计算机上。 请注意，通过使用session_<span class="keyword">unset</span>，该变量仍然存在。</div><div class="line"></div><div class="line">  然而，使用session_<span class="keyword">unset</span>与session_destroy一起使用，实际上是清除数据的更有效方法。 正如上面的例子所述，这个工作非常好，跨浏览器：</div><div class="line"></div><div class="line"> session_<span class="keyword">unset</span>（）;</div><div class="line"> session_destroy（）;</div></pre></td></tr></table></figure>
<h4 id="如果客户端禁用Cookie-怎么实现session共享多个页面？"><a href="#如果客户端禁用Cookie-怎么实现session共享多个页面？" class="headerlink" title="如果客户端禁用Cookie 怎么实现session共享多个页面？"></a>如果客户端禁用Cookie 怎么实现session共享多个页面？</h4><figure class="highlight php"><table><tr><td class="code"><pre><div class="line">一、 利用http协议传送SSID=sessinId()</div><div class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'SSID'</span>])) &#123;</div><div class="line">    <span class="comment">//设置session_id</span></div><div class="line">    session_id($_GET[<span class="string">'SSID'</span>]);</div><div class="line">&#125;</div><div class="line">session_start();</div><div class="line"></div><div class="line">二、 利用常量SID来传送</div><div class="line">    session_start();</div><div class="line">    <span class="keyword">echo</span> SID;</div><div class="line">经过测试 </div><div class="line">SID是第一次访问站点的时候有的内容</div><div class="line">再次访问的时候为空</div></pre></td></tr></table></figure>
<h4 id="demo中控制非法入侵"><a href="#demo中控制非法入侵" class="headerlink" title="demo中控制非法入侵"></a>demo中控制非法入侵</h4><figure class="highlight abnf"><table><tr><td class="code"><pre><div class="line">在loginProcess.php中</div><div class="line">判断账号密码正确的操作中 设置Session</div><div class="line">然后在后台页面依次验证</div><div class="line"></div><div class="line">然后考虑退出的时候（暂时只想到了手动点击退出页面</div><div class="line">&lt;a href=<span class="string">"empProcess.php"</span> &gt;安全退出&lt;/a&gt;</div><div class="line">然后empProcss.php中如果没有接收到flag就说明是退出操作  </div><div class="line">退出就清除Session</div><div class="line">session_unset()<span class="comment">;</span></div><div class="line">session_destroy()<span class="comment">;</span></div></pre></td></tr></table></figure>
<h3 id="Cookie-和-Session"><a href="#Cookie-和-Session" class="headerlink" title="Cookie 和 Session"></a>Cookie 和 Session</h3><h4 id="php-ini-中的设置"><a href="#php-ini-中的设置" class="headerlink" title="php.ini 中的设置"></a>php.ini 中的设置</h4><figure class="highlight stylus"><table><tr><td class="code"><pre><div class="line">session_name</div><div class="line">设置session的名字</div><div class="line"></div><div class="line">session<span class="selector-class">.save_path</span> = 路径</div><div class="line">网站session目录文件</div><div class="line"></div><div class="line">session<span class="selector-class">.gc_maxlifetime</span> = <span class="number">1440</span> </div><div class="line">最大生命周期</div><div class="line">session<span class="selector-class">.gc_probability</span> = <span class="number">1</span></div><div class="line">session<span class="selector-class">.gc_divisor</span> = <span class="number">1000</span></div><div class="line">一定概率垃圾回收</div><div class="line"></div><div class="line">session<span class="selector-class">.cookie_lifetime</span> = <span class="number">0</span></div><div class="line">cookie默认生命周期，默认是<span class="number">0</span> </div><div class="line">当关闭浏览器后，该cookies生效</div><div class="line"></div><div class="line">session_set_save_handler </div><div class="line">( callable <span class="variable">$open</span> , callable <span class="variable">$close</span> , callable <span class="variable">$read</span> , </div><div class="line">callable <span class="variable">$write</span> , callable <span class="variable">$destroy</span> , callable <span class="variable">$gc</span> [, callable <span class="variable">$create_sid</span> ] )</div><div class="line">可自定义 <span class="variable">$open</span> <span class="variable">$close</span> <span class="variable">$read</span> <span class="variable">$write</span> <span class="variable">$destroy</span> <span class="variable">$gc</span></div></pre></td></tr></table></figure>
<h4 id="区别"><a href="#区别" class="headerlink" title="区别"></a>区别</h4><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">Cookie是传送给客户端的</div><div class="line">Session是写到服务端的，并且创建Session时候传回的一个Cookie-SID</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      对Cookie 和 Session的知识总结
    
    </summary>
    
    
      <category term="php" scheme="http://draymonder.me/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>雇员管理系统项目开发</title>
    <link href="http://draymonder.me/2018/02/25/the-demo1/"/>
    <id>http://draymonder.me/2018/02/25/the-demo1/</id>
    <published>2018-02-25T15:59:59.000Z</published>
    <updated>2018-02-25T12:47:20.309Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>  走一个雇员管理系统的开发，终于能实战演练一些东西了。<br><figure class="highlight lsl"><table><tr><td class="code"><pre><div class="line">学习目标：</div><div class="line">    <span class="number">1.</span> 熟练编写规范的项目需求设计说明书</div><div class="line">    <span class="number">2.</span> 熟练编写项目数据库设计说明书</div><div class="line">    <span class="number">3.</span> 提升数据库建模设计能力</div><div class="line">    <span class="number">4.</span> 培养良好的沟通能力和团队合作精神</div><div class="line">    <span class="number">5.</span> 完全OOP设计思想</div><div class="line">    <span class="number">6.</span> 培养良好的编码习惯，代码编写规范。</div></pre></td></tr></table></figure></p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="项目入门先知"><a href="#项目入门先知" class="headerlink" title="项目入门先知"></a>项目入门先知</h3><h4 id="phpstorm-设置默认编码"><a href="#phpstorm-设置默认编码" class="headerlink" title="phpstorm 设置默认编码"></a>phpstorm 设置默认编码</h4><figure class="highlight routeros"><table><tr><td class="code"><pre><div class="line">phpstorm默认编码格式为GBK</div><div class="line">可通过 File —&gt;<span class="built_in"> Settings </span>—&gt; Editor —&gt; File Encodings </div><div class="line">将文件/项目默认的编码改为UTF-8</div></pre></td></tr></table></figure>
<h4 id="phpstorm-代码提示功能"><a href="#phpstorm-代码提示功能" class="headerlink" title="phpstorm 代码提示功能"></a>phpstorm 代码提示功能</h4><figure class="highlight mathematica"><table><tr><td class="code"><pre><div class="line"><span class="keyword">File</span> —&gt; <span class="keyword">Power</span> <span class="keyword">Save</span> <span class="keyword">Mode</span> </div><div class="line">选择关闭即可</div></pre></td></tr></table></figure>
<h4 id="phpstorm-常用快捷键"><a href="#phpstorm-常用快捷键" class="headerlink" title="phpstorm 常用快捷键"></a>phpstorm 常用快捷键</h4><figure class="highlight nginx"><table><tr><td class="code"><pre><div class="line"><span class="attribute">ctrl</span> + d 复制当前行</div></pre></td></tr></table></figure>
<h4 id="phpstorm-xDebug环境配置"><a href="#phpstorm-xDebug环境配置" class="headerlink" title="phpstorm + xDebug环境配置"></a>phpstorm + xDebug环境配置</h4><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://my.oschina.net/u/940075/blog/534687"</span>&gt;</span>调试环境配置<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="解决中文乱码"><a href="#解决中文乱码" class="headerlink" title="解决中文乱码"></a>解决中文乱码</h4><figure class="highlight abnf"><table><tr><td class="code"><pre><div class="line">header(<span class="string">"content-type:text/html; charset=utf-8"</span>)<span class="comment">;</span></div></pre></td></tr></table></figure>
<h3 id="项目遇到的问题及解决方案"><a href="#项目遇到的问题及解决方案" class="headerlink" title="项目遇到的问题及解决方案"></a>项目遇到的问题及解决方案</h3><h4 id="让div水平垂直居中的几种方法-需要多看"><a href="#让div水平垂直居中的几种方法-需要多看" class="headerlink" title="让div水平垂直居中的几种方法(需要多看)"></a>让div水平垂直居中的几种方法(需要多看)</h4><figure class="highlight livecodeserver"><table><tr><td class="code"><pre><div class="line">&lt;<span class="keyword">a</span> href=<span class="string">"https://www.cnblogs.com/dushao/p/5999239.html"</span>&gt;让<span class="keyword">div</span>水平垂直居中的几种方法&lt;/<span class="keyword">a</span>&gt;</div></pre></td></tr></table></figure>
<h4 id="设置input搜索框的颜色"><a href="#设置input搜索框的颜色" class="headerlink" title="设置input搜索框的颜色"></a>设置input搜索框的颜色</h4><figure class="highlight css"><table><tr><td class="code"><pre><div class="line"><span class="selector-tag">input</span>&#123;<span class="attribute">border</span>:<span class="number">1px</span> solid red;<span class="attribute">background-color</span>:transparent;&#125;</div></pre></td></tr></table></figure>
<h4 id="打印数据库内容"><a href="#打印数据库内容" class="headerlink" title="打印数据库内容"></a>打印数据库内容</h4><figure class="highlight php"><table><tr><td class="code"><pre><div class="line">$mysql=<span class="keyword">new</span> mysqli(<span class="string">"localhost"</span>,<span class="string">"root"</span>,<span class="string">"root"</span>,<span class="string">"hr"</span>);</div><div class="line"><span class="keyword">if</span>($mysql-&gt;connect_error)&#123;</div><div class="line">    <span class="keyword">die</span>(<span class="string">"数据库连接失败"</span>).$mysql-&gt;connect_error;</div><div class="line">&#125;</div><div class="line"><span class="keyword">echo</span> <span class="string">"&lt;table width='700px' border='1' &gt;"</span>;</div><div class="line"><span class="comment">//打印表头</span></div><div class="line"><span class="keyword">echo</span> <span class="string">"&lt;tr&gt;"</span>;</div><div class="line">$sql = <span class="string">"select * from emp"</span>;</div><div class="line">$res = $mysql-&gt;query($sql);</div><div class="line"><span class="keyword">while</span>($col=$res-&gt;fetch_field() ) &#123;</div><div class="line">    <span class="keyword">echo</span> <span class="string">"&lt;th&gt;&#123;$col-&gt;name&#125;&lt;/th&gt;"</span>;</div><div class="line">&#125;</div><div class="line"><span class="keyword">echo</span> <span class="string">"&lt;/tr&gt;"</span>;</div><div class="line"><span class="keyword">while</span> ($row = $res-&gt;fetch_row() )&#123;</div><div class="line">    <span class="keyword">echo</span> <span class="string">"&lt;tr&gt;"</span>;</div><div class="line">    <span class="keyword">foreach</span> ($row <span class="keyword">as</span> $val)&#123;</div><div class="line">        <span class="keyword">echo</span> <span class="string">"&lt;td&gt;$val&lt;/td&gt;"</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">echo</span> <span class="string">"&lt;/tr&gt;"</span>;</div><div class="line">&#125;</div><div class="line"><span class="keyword">echo</span> <span class="string">"&lt;/table&gt;"</span>;</div><div class="line">$res-&gt;free();</div><div class="line">$mysql-&gt;close();</div></pre></td></tr></table></figure>
<h4 id="分页显示"><a href="#分页显示" class="headerlink" title="分页显示"></a>分页显示</h4><figure class="highlight shell"><table><tr><td class="code"><pre><div class="line">分页中必须使用的变量</div><div class="line"><span class="meta">$</span><span class="bash">pageNow --&gt; 当前页 用户输入</span></div><div class="line"><span class="meta">$</span><span class="bash">pageCount --&gt; 总共有几页</span></div><div class="line"><span class="meta">$</span><span class="bash">rowCount  --&gt; 总共有多少条记录 [数据库获取]</span></div><div class="line"><span class="meta">$</span><span class="bash">pageSize --&gt; 每页显示几条记录 [程序员自己定]</span></div><div class="line"></div><div class="line">/*实例*/</div><div class="line"><span class="meta">$</span><span class="bash">pageSize = 4; //每页有四条记录</span></div><div class="line"><span class="meta">$</span><span class="bash">rowCount = <span class="variable">$res</span>-&gt;num_rows; //总共有多少条记录</span></div><div class="line">//$pageNow = 1; //第一页 用户指定</div><div class="line"><span class="meta">if(isset($</span><span class="bash">_GET[<span class="string">'pageNow'</span>])) &#123;</span></div><div class="line">    $pageNow = $_GET['pageNow'];</div><div class="line">&#125;else &#123;</div><div class="line">    $pageNow = 1;</div><div class="line">&#125;</div><div class="line"><span class="meta">$</span><span class="bash">pageCount = ceil(<span class="variable">$rowCount</span>/<span class="variable">$pageSize</span>);</span></div><div class="line"><span class="meta">$</span><span class="bash"><span class="built_in">test</span> = (<span class="variable">$pageNow</span>-1) * <span class="variable">$pageSize</span>;</span></div><div class="line"><span class="meta">$</span><span class="bash">sql = <span class="string">"select * from emp limit <span class="variable">$test</span>,<span class="variable">$pageSize</span>"</span>;</span></div><div class="line"><span class="meta">$</span><span class="bash">res = <span class="variable">$mysql</span>-&gt;query(<span class="variable">$sql</span>);</span></div></pre></td></tr></table></figure>
<h4 id="删除整个数据表内容"><a href="#删除整个数据表内容" class="headerlink" title="删除整个数据表内容"></a>删除整个数据表内容</h4><figure class="highlight sql"><table><tr><td class="code"><pre><div class="line"><span class="keyword">truncate</span> <span class="keyword">table</span> table_name; //效率高</div><div class="line"><span class="keyword">delete</span> * <span class="keyword">from</span> table_name;  //需要写服务器log</div></pre></td></tr></table></figure>
<h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>一个项目,重构了好几次代码。 最主要的还是逻辑有些乱，直接上手代码，导致效率很低。<br>大概过程是 业务逻辑 -&gt;框架改进 -&gt; 代码重构 -&gt; 面向对象 -&gt; 安全性和拓展性考虑 -&gt; 优化算法 -&gt; 前端显示<br>使用M(Model)V(View)C(Controler)模式，把用户的输入，数据的处理，页面的显示分别处理,易于项目的维护和拓展。</p>
]]></content>
    
    <summary type="html">
    
      记录雇员管理系统(简易)项目开发的过程
    
    </summary>
    
    
      <category term="php" scheme="http://draymonder.me/tags/php/"/>
    
      <category term="demo" scheme="http://draymonder.me/tags/demo/"/>
    
  </entry>
  
  <entry>
    <title>新的期待，新的向往</title>
    <link href="http://draymonder.me/2018/02/24/the-diary-02-24/"/>
    <id>http://draymonder.me/2018/02/24/the-diary-02-24/</id>
    <published>2018-02-24T09:00:00.000Z</published>
    <updated>2018-02-27T02:40:56.538Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>  寒假就快过完了呢，给自己一个心情的整理，以及对未来的向往。</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="现在"><a href="#现在" class="headerlink" title="现在"></a>现在</h3><h4 id="所做"><a href="#所做" class="headerlink" title="所做"></a>所做</h4><ol>
<li>做完了PAT乙级真题30道。</li>
<li>在学校吃了两星期的外卖!!! </li>
<li>php, mysql的初步入门，并做了一个 雇员管理系统 的项目，待优化。 </li>
<li>看完了一本书《你就是想得太多》,一部视频老罗的《时间的朋友》。 </li>
<li>认识了一些人，稍稍开放了自己，狼人杀基本会玩。 </li>
<li>看了很多MV，喜欢一个人安安静静的。</li>
<li>和初中同学聚会，一起放风筝。</li>
<li>变得自信多了啊~(这是我这个假期收获最大的事情吧)</li>
</ol>
<h4 id="所思"><a href="#所思" class="headerlink" title="所思"></a>所思</h4><p>《你就是想的太多》 -小摘抄<br><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">  还有人，因为喜欢的人不理自己而不高兴。可是回头想，如果是你</div><div class="line">自己在忙的话，也会不怎么理别人。当然如果别人不喜欢你，不理你，</div><div class="line">那你就更没有必要不高兴了，因为你的喜欢本就是要让你能够有好的</div><div class="line">情绪的。</div><div class="line">  这看似有点儿无奈的边界，也的确是人生的一种境遇，人生的境遇</div><div class="line">本来就是常常发生变化，无论如何你都得保有乐观的心境。</div><div class="line">  有句“诸行无常”的佛语，其意思是说，时间的一切事物时刻都处于</div><div class="line">变化之中。</div><div class="line">  对于不喜欢你的人，要么你自己改变，变得让人家喜欢，要么你不</div><div class="line">如承认这是客观的存在，因为你也有不喜欢的人，何必太过勉强的去</div><div class="line">强人所难呢？“己所不欲勿施于人”这句流传几千年的话至今使用。</div><div class="line">  也就是说，对人生中所有的无常，变化，我们欣然接受就好了。</div><div class="line">即使是不利的，糟糕的，我们也应该避免让自己的情绪变坏。</div></pre></td></tr></table></figure></p>
<p>感谢每一个给与我帮助的人 -小感悟<br><figure class="highlight lsl"><table><tr><td class="code"><pre><div class="line">在<span class="number">2017</span> 年初定下的目标,完成了不少。其实毫无意义,因为</div><div class="line">错过了更重要的。</div><div class="line"></div><div class="line">其实本可以过一种更健康的方式,用更好的状态来过好每一天。</div><div class="line"></div><div class="line">我们谁也不知道自己能活多长时间，我也不知道，但是我感觉必须趁着</div><div class="line">自己年轻，多取得一些成就。</div></pre></td></tr></table></figure></p>
<h3 id="未来"><a href="#未来" class="headerlink" title="未来"></a>未来</h3><h4 id="所想"><a href="#所想" class="headerlink" title="所想"></a>所想</h4><ol>
<li>原谅我的人生格局太小，容不下那么多的人，那么多惊天动地的事。<br>我只想安安稳稳的过一辈子，有一个喜欢的女孩，买一套不大的房子，<br>过着普通但没有太大压力的生活。</li>
<li>真希望我能快点儿遇到能让我心动的女孩啊，好看不好看无所谓的吧，<br>只要善良就够了。</li>
</ol>
<h4 id="期待"><a href="#期待" class="headerlink" title="期待"></a>期待</h4><figure class="highlight lsl"><table><tr><td class="code"><pre><div class="line"><span class="number">1.</span> 语言再尝试一下Java, Python </div><div class="line">最后看爱好, 择一而用, 并且熟悉相应的框架</div><div class="line"><span class="number">2.</span> 数据库主选就mysql,然后稍稍看看 db, oracle 然后针对NoSQL了解一下</div><div class="line"><span class="number">3.</span> 操作系统选择Linux入门吧，搭建好Unbuntu了，入门了解一下指令以及操作。</div><div class="line"><span class="number">4.</span> 数据结构/编程方面还要深入。</div><div class="line"><span class="number">5.</span> 保养好身体，新的学期瘦个<span class="number">15</span>斤，对我来说So easy.</div><div class="line"><span class="number">6.</span> 今年想要看一场演唱会，体验那种feel</div><div class="line">待添加的了，说不定会有新的想法</div></pre></td></tr></table></figure>
<h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>  珍惜时间，珍惜身边的人。<br>  一步步变得成熟，一步步靠近喜欢的人，一步步走向自己喜欢的样子，是多么幸福的一件事。<br>  END</p>
]]></content>
    
    <summary type="html">
    
      一心向北，寻找自己的所属
    
    </summary>
    
    
      <category term="Diary" scheme="http://draymonder.me/tags/Diary/"/>
    
  </entry>
  
  <entry>
    <title>预定义超全局数组</title>
    <link href="http://draymonder.me/2018/02/22/the-globalArray/"/>
    <id>http://draymonder.me/2018/02/22/the-globalArray/</id>
    <published>2018-02-22T04:00:00.000Z</published>
    <updated>2018-02-25T14:49:23.409Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>PHP设计者提供超全局数组的目的是为了让PHP程序员可以更方便快捷的编写程序</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><figure class="highlight shell"><table><tr><td class="code"><pre><div class="line"><span class="meta">$</span><span class="bash">GLOBALS </span></div><div class="line"><span class="meta">$</span><span class="bash">_SERVER</span></div><div class="line"><span class="meta">$</span><span class="bash">_REQUEST</span></div><div class="line"><span class="meta">$</span><span class="bash">_POST</span></div><div class="line"><span class="meta">$</span><span class="bash">_GET</span></div><div class="line"><span class="meta">$</span><span class="bash">_ENV //获取环境变量，不要用</span></div><div class="line"><span class="meta">$</span><span class="bash">_FILES</span></div><div class="line"><span class="meta">$</span><span class="bash">_COOKIE</span></div><div class="line"><span class="meta">$</span><span class="bash">_SESSION</span></div></pre></td></tr></table></figure>
<h3 id="GET-奇数中文乱码"><a href="#GET-奇数中文乱码" class="headerlink" title="$_GET 奇数中文乱码"></a>$_GET 奇数中文乱码</h3><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line">1. 给奇数中文加一个全角空格，然后用trim()去除末尾的空格</div><div class="line">2. 使用urlencode函数</div><div class="line"></div><div class="line">实例</div><div class="line">//test.php</div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">content</span>=<span class="string">"text/html"</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></div><div class="line"><span class="php"><span class="meta">&lt;?php</span> </span></div><div class="line"><span class="php">    $str = urlencode(<span class="string">'中国好'</span>);</span></div><div class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"&lt;a href='a.php?city=$str&amp;name=draymonder'&gt;传送数据&lt;/a&gt;"</span>;</span></div><div class="line"><span class="php"> <span class="meta">?&gt;</span></span></div><div class="line"> </div><div class="line">//a.php</div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">content</span>=<span class="string">"text/html"</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></div><div class="line"><span class="php"><span class="meta">&lt;?php</span> </span></div><div class="line"><span class="php">    var_dump($_GET);</span></div><div class="line"><span class="php"> <span class="meta">?&gt;</span></span></div></pre></td></tr></table></figure>
<h3 id="POST与GET提交的区别"><a href="#POST与GET提交的区别" class="headerlink" title="POST与GET提交的区别"></a>POST与GET提交的区别</h3><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">安全性</div><div class="line">数据传输大小</div><div class="line">保存到收藏夹</div></pre></td></tr></table></figure>
<h3 id="确认GET-POST请求"><a href="#确认GET-POST请求" class="headerlink" title="确认GET/POST请求"></a>确认GET/POST请求</h3><figure class="highlight awk"><table><tr><td class="code"><pre><div class="line"><span class="keyword">if</span>(<span class="variable">$_SERVER</span>[<span class="string">'REQUEST_METHOD'</span>] == <span class="string">"post"</span>) &#123;</div><div class="line">    <span class="regexp">//</span>post请求 </div><div class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> (<span class="variable">$_SERVER</span>[<span class="string">'REQUEST_METHOD'</span>] == <span class="string">"get"</span>) &#123;</div><div class="line">    <span class="regexp">//g</span>et请求</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="SERVER内容"><a href="#SERVER内容" class="headerlink" title="$_SERVER内容"></a>$_SERVER内容</h3><p><a href="https://www.cnblogs.com/rendd/p/6182918.html" target="_blank" rel="external">$_SERVER获取信息详解</a><br><figure class="highlight shell"><table><tr><td class="code"><pre><div class="line">1. 客户端浏览器信息</div><div class="line">2. 服务端信息</div><div class="line"></div><div class="line"><span class="meta">$</span><span class="bash">_SERVER[<span class="string">"REMOTE_ADDR"</span>]  浏览网页的用户ip</span></div><div class="line"><span class="meta">$</span><span class="bash">_SERVER[<span class="string">"SERVER_ADDR"</span>]  当前运行脚本的服务器的ip地址</span></div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      预定义超全局数组的学习
    
    </summary>
    
    
      <category term="php" scheme="http://draymonder.me/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>Mysql学习(4)</title>
    <link href="http://draymonder.me/2018/02/20/the-link-mysql4/"/>
    <id>http://draymonder.me/2018/02/20/the-link-mysql4/</id>
    <published>2018-02-20T15:59:59.000Z</published>
    <updated>2018-02-20T14:44:54.235Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>需要向mysql数据库添加100个用户，请问如何实现</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><div class="line">通常我们的一条sql在db接收到最终执行完毕返回可以分为下面三个过程：</div><div class="line"><span class="bullet">1. </span>词法和语义解析</div><div class="line"><span class="bullet">2. </span>优化sql语句，制定执行计划</div><div class="line"><span class="bullet">3. </span>执行并返回结果</div><div class="line"></div><div class="line">预编译语句的优势在于归纳为：一次编译、多次运行，省去了解析优化等过程；此外预编译语句能防止sql注入。</div></pre></td></tr></table></figure>
<h3 id="dml数据操作语句"><a href="#dml数据操作语句" class="headerlink" title="dml数据操作语句"></a>dml数据操作语句</h3><figure class="highlight php"><table><tr><td class="code"><pre><div class="line"><span class="comment">//创建预编译对象</span></div><div class="line">$sql = <span class="string">"insert into stu(id,cost) values(?,?)"</span>;</div><div class="line">$mysql_stmt = $mysql-&gt;prepare($sql);</div><div class="line"><span class="comment">//绑定参数</span></div><div class="line">$id = <span class="number">3</span>;</div><div class="line">$cost = <span class="number">40</span>;</div><div class="line"><span class="comment">//给问号赋值</span></div><div class="line">$mysql_stmt-&gt;bind_param(<span class="string">"ii"</span>,$id,$cost);</div><div class="line"><span class="comment">//执行</span></div><div class="line">$res = $mysql_stmt-&gt;execute();</div><div class="line"><span class="keyword">if</span>(!$res) &#123;</div><div class="line">    <span class="keyword">die</span>(<span class="string">"操作失败"</span>.$mysql_stmt-&gt;error);</div><div class="line">&#125;</div><div class="line"><span class="keyword">else</span> &#123;</div><div class="line">    <span class="keyword">echo</span> <span class="string">"操作ok"</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="dql数据查询语句"><a href="#dql数据查询语句" class="headerlink" title="dql数据查询语句"></a>dql数据查询语句</h3><figure class="highlight php"><table><tr><td class="code"><pre><div class="line"><span class="comment">//创建一个预定义的对象 ? 站位</span></div><div class="line">$sql = <span class="string">"select * from stu where id &gt; ?"</span>;</div><div class="line">$mysql_stmt = $mysql-&gt;prepare($sql);</div><div class="line">$id = <span class="number">1</span>;</div><div class="line"><span class="comment">//绑定参数</span></div><div class="line">$mysql_stmt-&gt;bind_param(<span class="string">"i"</span>,$id);</div><div class="line">$mysql_stmt-&gt;bind_result($id,$cost);</div><div class="line"><span class="comment">//执行</span></div><div class="line">$mysql_stmt-&gt;execute();</div><div class="line"><span class="comment">//取结果集</span></div><div class="line"><span class="keyword">while</span> ($mysql_stmt-&gt;fetch())&#123;</div><div class="line">    <span class="keyword">echo</span> <span class="string">"$id $cost &lt;br&gt;"</span>;</div><div class="line">&#125;</div><div class="line"><span class="comment">//资源关闭</span></div><div class="line">$mysql_stmt-&gt;free_result();</div><div class="line"><span class="comment">//预编译关闭</span></div><div class="line">$mysql_stmt-&gt;close();</div></pre></td></tr></table></figure>
<h3 id="一些常用的mysqli函数"><a href="#一些常用的mysqli函数" class="headerlink" title="一些常用的mysqli函数"></a>一些常用的mysqli函数</h3><figure class="highlight lsl"><table><tr><td class="code"><pre><div class="line">mysqli_result类</div><div class="line">属性</div><div class="line">列 $field_count;</div><div class="line">行 $num_rows;</div><div class="line">方法</div><div class="line">fetch_fields() <span class="comment">//列信息</span></div><div class="line">被返回的对象的属性为</div><div class="line">    name - 列名</div><div class="line">    table - 该列所在的表名</div><div class="line">    max_length - 该列最大长度</div><div class="line">    not_null - <span class="number">1</span>，如果该列不能为 NULL</div><div class="line">    primary_key - <span class="number">1</span>，如果该列是 primary <span class="type">key</span></div><div class="line">    unique_key - <span class="number">1</span>，如果该列是 unique <span class="type">key</span></div><div class="line">    multiple_key - <span class="number">1</span>，如果该列是 non-unique <span class="type">key</span></div><div class="line">    numeric - <span class="number">1</span>，如果该列是 numeric</div><div class="line">    blob - <span class="number">1</span>，如果该列是 BLOB</div><div class="line">    type - 该列的类型</div><div class="line">    unsigned - <span class="number">1</span>，如果该列是无符号数</div><div class="line">    zerofill - <span class="number">1</span>，如果该列是 zero-filled</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      mysqli扩展库的预处理技术 mysqli_stmt以及其他常用的mysqli函数
    
    </summary>
    
    
      <category term="mysql" scheme="http://draymonder.me/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>Mysql学习(3)</title>
    <link href="http://draymonder.me/2018/02/20/the-link-mysql3/"/>
    <id>http://draymonder.me/2018/02/20/the-link-mysql3/</id>
    <published>2018-02-20T06:30:00.000Z</published>
    <updated>2018-02-20T09:59:31.519Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>  发现自己越来越大，却越来越害羞了，昨天下午和好多人玩了半天，虽然回来头晕晕的，不过还好的了。自己确实应该多接触接触人了呢。</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="批量执行sql语句"><a href="#批量执行sql语句" class="headerlink" title="批量执行sql语句"></a>批量执行sql语句</h3><p>最好不要把dml和dql语句混用，这样不利于控制</p>
<h4 id="批量执行dml语句"><a href="#批量执行dml语句" class="headerlink" title="批量执行dml语句"></a>批量执行dml语句</h4><figure class="highlight xquery"><table><tr><td class="code"><pre><div class="line">dml语句可以混合使用 <span class="keyword">delete</span> <span class="keyword">insert</span> <span class="keyword">update</span> 但是最好不要使用select</div><div class="line"></div><div class="line">$sql = <span class="string">"dml语句1; dml语句2; dml语句3;"</span>;</div><div class="line">$res = $mysql-&gt;multi_query($sql);</div><div class="line"><span class="keyword">if</span>(!$res) &#123;</div><div class="line">    echo <span class="string">"test失败"</span>.$mysql-&gt;error;</div><div class="line">&#125;</div><div class="line"><span class="keyword">else</span> &#123;</div><div class="line">    echo <span class="string">"执行成功"</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="批量执行dql语句"><a href="#批量执行dql语句" class="headerlink" title="批量执行dql语句"></a>批量执行dql语句</h4><figure class="highlight php"><table><tr><td class="code"><pre><div class="line">$sql = <span class="string">"dql语句1; dql语句2; dql语句3;"</span>;</div><div class="line"></div><div class="line"><span class="keyword">if</span>($mysql-&gt;multi_query($sql))&#123;</div><div class="line">    <span class="keyword">do</span> &#123;</div><div class="line">        <span class="comment">//取结果集中一个结果</span></div><div class="line">        <span class="keyword">if</span>($res = $mysql-&gt;store_result())&#123;</div><div class="line">            <span class="comment">//取结果的每一行</span></div><div class="line">            <span class="keyword">while</span> ($row = $res-&gt;fetch_row())&#123;</div><div class="line">                $i=<span class="number">0</span>;</div><div class="line">                <span class="keyword">foreach</span> ($row <span class="keyword">as</span> $key =&gt; $value) &#123;</div><div class="line">                    <span class="keyword">if</span>($i)</div><div class="line">                        <span class="keyword">echo</span> <span class="string">"  "</span>;</div><div class="line">                    <span class="keyword">echo</span> <span class="string">"$value"</span>;</div><div class="line">                    $i++;</div><div class="line">                &#125;</div><div class="line">                <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">echo</span> <span class="string">"&lt;br&gt;---&lt;br&gt;"</span>;</div><div class="line">            <span class="comment">//资源用完，即时销毁</span></div><div class="line">            $res-&gt;free();</div><div class="line">        &#125;</div><div class="line">        <span class="comment">//如果没有多余的结果了，就退出</span></div><div class="line">        <span class="keyword">if</span>(!$mysql-&gt;more_results())</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">    &#125;<span class="keyword">while</span> ($mysql-&gt;next_result());</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="事务处理"><a href="#事务处理" class="headerlink" title="事务处理"></a>事务处理</h3><h4 id="无法进行事务处理的解决方法"><a href="#无法进行事务处理的解决方法" class="headerlink" title="无法进行事务处理的解决方法"></a>无法进行事务处理的解决方法</h4><p>不知道为什么 一直没法回滚.好像是环境配置的问题？<br><figure class="highlight sql"><table><tr><td class="code"><pre><div class="line">显示当前autocommit值：</div><div class="line"><span class="keyword">show</span> <span class="keyword">VARIABLES</span> <span class="keyword">like</span> <span class="string">'%autocommit%'</span>;</div><div class="line"></div><div class="line">设置autocommit为False</div><div class="line"><span class="keyword">set</span> autocommit = <span class="number">0</span>;</div><div class="line"></div><div class="line">查看数据库test的表stu使用的存储引擎</div><div class="line"><span class="keyword">show</span> <span class="keyword">TABLE</span> <span class="keyword">STATUS</span> <span class="keyword">FROM</span> <span class="keyword">test</span> <span class="keyword">WHERE</span> <span class="keyword">name</span> = <span class="string">"stu"</span>;</div></pre></td></tr></table></figure></p>
<p>发现我的引擎是MyISAM，效率更高，但不支持事务，不支持外键。<br>InnoDB效率略低，支持事务和外键。<br><figure class="highlight haskell"><table><tr><td class="code"><pre><div class="line">更改 mysql目录下的my.ini</div><div class="line"><span class="keyword">default</span>-storage-engine=<span class="type">INNODB</span></div><div class="line">然后重新建表</div></pre></td></tr></table></figure></p>
<h4 id="事务处理示例"><a href="#事务处理示例" class="headerlink" title="事务处理示例"></a>事务处理示例</h4><figure class="highlight elixir"><table><tr><td class="code"><pre><div class="line"><span class="variable">$mysql</span>-&gt;autocommit(<span class="keyword">false</span>);</div><div class="line"><span class="variable">$sql1</span>= <span class="string">"update stu set cost=cost-2 where id = 0"</span>;</div><div class="line"><span class="variable">$sql2</span>= <span class="string">"update stu set cost1=cost+2 where id = 1"</span>;</div><div class="line"><span class="variable">$r1</span> = <span class="variable">$mysql</span>-&gt;query(<span class="variable">$sql1</span>);</div><div class="line"><span class="variable">$r2</span> = <span class="variable">$mysql</span>-&gt;query(<span class="variable">$sql2</span>);</div><div class="line">if(!<span class="variable">$r1</span> || !<span class="variable">$r2</span>)&#123;</div><div class="line">    /<span class="regexp">/$mysql-&gt;rollback();</span></div><div class="line"><span class="regexp">    die( "错误".$mysql-&gt;error);</span></div><div class="line"><span class="regexp">    $mysql-&gt;rollback();</span></div><div class="line"><span class="regexp">&#125;</span></div><div class="line"><span class="regexp">else&#123;</span></div><div class="line"><span class="regexp">    echo "操作成功";</span></div><div class="line"><span class="regexp">    /</span><span class="regexp">/$mysql-&gt;commit();</span></div><div class="line"><span class="regexp">    $mysqli-&gt;commit();</span></div><div class="line"><span class="regexp">&#125;</span></div></pre></td></tr></table></figure>
<h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>  以平和的心态去接触身边更多的人。</p>
]]></content>
    
    <summary type="html">
    
      使用mysqli扩展库批量执行sql语句和事务处理
    
    </summary>
    
    
      <category term="mysql" scheme="http://draymonder.me/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>Mysql学习(2)</title>
    <link href="http://draymonder.me/2018/02/18/the-link-mysql2/"/>
    <id>http://draymonder.me/2018/02/18/the-link-mysql2/</id>
    <published>2018-02-18T15:59:59.000Z</published>
    <updated>2018-02-20T09:59:19.073Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>大年初一，学点儿东西，美滋滋~~</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="fetch-获取行数据"><a href="#fetch-获取行数据" class="headerlink" title="fetch 获取行数据"></a>fetch 获取行数据</h3><figure class="highlight elixir"><table><tr><td class="code"><pre><div class="line">mysql_fetch_row(<span class="variable">$res</span>); <span class="regexp">//</span>返回索引数组 <span class="variable">$row</span>[<span class="number">1</span>]...</div><div class="line">mysql_fetch_assoc(<span class="variable">$res</span>); <span class="regexp">//</span>返回关联数组 <span class="variable">$row</span>[<span class="string">'id'</span>]</div><div class="line">mysql_fetch_array(<span class="variable">$res</span>); <span class="regexp">//</span>返回索引和关联数组</div><div class="line">mysql_fetch_object(<span class="variable">$res</span>); <span class="regexp">//</span>返回对象 <span class="variable">$row</span>-&gt;id</div></pre></td></tr></table></figure>
<h3 id="简易SqlTool类"><a href="#简易SqlTool类" class="headerlink" title="简易SqlTool类"></a>简易SqlTool类</h3><figure class="highlight php"><table><tr><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">SqlTool</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> $conn;</div><div class="line">    <span class="keyword">private</span> $host = <span class="string">"localhost"</span>;</div><div class="line">    <span class="keyword">private</span> $user = <span class="string">"root"</span>;</div><div class="line">    <span class="keyword">private</span> $password = <span class="string">""</span>;</div><div class="line">    <span class="keyword">private</span> $db = <span class="string">"test"</span>;</div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">SqlTool</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">$this</span>-&gt;conn = mysql_connect(<span class="keyword">$this</span>-&gt;host,<span class="keyword">$this</span>-&gt;user,<span class="keyword">$this</span>-&gt;password);</div><div class="line">        <span class="keyword">if</span>(!<span class="keyword">$this</span>-&gt;conn ) &#123;</div><div class="line">            <span class="keyword">die</span> (<span class="string">"连接数据库失败"</span>.mysql_error());</div><div class="line">        &#125;</div><div class="line">        mysql_select_db(<span class="keyword">$this</span>-&gt;db,<span class="keyword">$this</span>-&gt;conn);</div><div class="line">        mysql_query(<span class="string">"set names utf8"</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">//数据查询语言DQL SELECT FROM WHERE</span></div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">dql</span><span class="params">($sql)</span> </span>&#123;</div><div class="line">        $res = mysql_query($sql,<span class="keyword">$this</span>-&gt;conn);</div><div class="line">        <span class="keyword">return</span> $res;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">//数据操纵语言DML 创建,插入,更新,删除</span></div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">dml</span><span class="params">($sql)</span> </span>&#123;</div><div class="line">        $res =  mysql_query($sql,<span class="keyword">$this</span>-&gt;conn);</div><div class="line">        <span class="keyword">if</span>(!$res ) &#123;</div><div class="line">            <span class="keyword">return</span> <span class="number">0</span>; <span class="comment">// 失败</span></div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">if</span>(mysql_affected_rows(<span class="keyword">$this</span>-&gt;conn) &gt; <span class="number">0</span> ) &#123;</div><div class="line">            <span class="keyword">return</span> <span class="number">1</span>; <span class="comment">// 成功</span></div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span>&#123;</div><div class="line">            <span class="keyword">return</span> <span class="number">2</span>; <span class="comment">// 操作无效</span></div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="mysql中文乱码解决"><a href="#mysql中文乱码解决" class="headerlink" title="mysql中文乱码解决"></a>mysql中文乱码解决</h3><figure class="highlight cs"><table><tr><td class="code"><pre><div class="line"><span class="comment">//首先查看mysql的环境配置</span></div><div class="line">show variables like <span class="string">"%char%"</span>  </div><div class="line"><span class="comment">//如果都是utf-8则已经配置好</span></div><div class="line"><span class="comment">//如果显示有其他的编码,打开mysql安装目录查找my.ini</span></div><div class="line"><span class="comment">//下面代码粘贴到my.ini中</span></div><div class="line"></div><div class="line">[<span class="meta">mysql</span>]</div><div class="line"><span class="keyword">default</span>-character-<span class="keyword">set</span>=utf8</div><div class="line">[<span class="meta">mysqld</span>]</div><div class="line">character-<span class="keyword">set</span>-server=utf8</div><div class="line"></div><div class="line"><span class="comment">//然后php文件中，添加如下代码</span></div><div class="line">header(<span class="string">"content-type:text/html;charset=utf-8"</span>);</div></pre></td></tr></table></figure>
<h3 id="NULL-和-空字符串的比较"><a href="#NULL-和-空字符串的比较" class="headerlink" title="NULL 和 空字符串的比较"></a>NULL 和 空字符串的比较</h3><pre><code>null的类型是null，&quot;&quot;的类型是string。双等下看不出来，三等就能看出来了。
另外有个形象的比喻，如果null代表你没交作业的话，&quot;&quot;代表你把本子交了上去但是啥都没写。
</code></pre>]]></content>
    
    <summary type="html">
    
      Mysql中获取行数据,简易SqlTool类,mysql中文乱码解决,NULL 和 空字符串的比较
    
    </summary>
    
    
      <category term="mysql" scheme="http://draymonder.me/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>Mysql学习(1)</title>
    <link href="http://draymonder.me/2018/02/14/the-link-mysql1/"/>
    <id>http://draymonder.me/2018/02/14/the-link-mysql1/</id>
    <published>2018-02-14T15:59:59.000Z</published>
    <updated>2018-02-20T09:59:22.894Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>想趁着今天情人节，给自己补补知识。</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="数据库的基本操作"><a href="#数据库的基本操作" class="headerlink" title="数据库的基本操作"></a>数据库的基本操作</h3><p>仅仅是记录我学到的啊,待补充，因为我用的phpadmin,所以感觉有些弱智<br><figure class="highlight sql"><table><tr><td class="code"><pre><div class="line"><span class="keyword">SHOW</span> <span class="keyword">DATABASES</span>; //查看mysql中所有的数据库</div><div class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> 数据库名; //创建数据库</div><div class="line"><span class="keyword">DROP</span> <span class="keyword">DATABASE</span> 数据库名; //删除数据库</div></pre></td></tr></table></figure></p>
<h3 id="数据表的基本操作"><a href="#数据表的基本操作" class="headerlink" title="数据表的基本操作"></a>数据表的基本操作</h3><p>mysql中保存了很多数据库、一个数据库中可以保存很多表</p>
<h4 id="创建数据表"><a href="#创建数据表" class="headerlink" title="创建数据表"></a>创建数据表</h4><figure class="highlight sql"><table><tr><td class="code"><pre><div class="line"><span class="keyword">use</span> 数据库名; //使用数据库</div><div class="line"></div><div class="line"><span class="keyword">show</span> <span class="keyword">tables</span>; // 查看所有表</div><div class="line"><span class="keyword">create</span> <span class="keyword">table</span> student( //创建没有约束的student表</div><div class="line">    <span class="keyword">id</span> <span class="built_in">INT</span>(<span class="number">11</span>),</div><div class="line">    <span class="keyword">name</span> <span class="built_in">Varchar</span>(<span class="number">12</span>),</div><div class="line">     age <span class="built_in">INT</span> (<span class="number">11</span>),</div><div class="line">     passward <span class="built_in">INT</span>(<span class="number">11</span>)</div><div class="line">)</div><div class="line"></div><div class="line">//单字段主键约束</div><div class="line"><span class="keyword">id</span> <span class="built_in">INT</span>(<span class="number">11</span>) PRIMARY <span class="keyword">KEY</span></div><div class="line"> <span class="keyword">or</span></div><div class="line">PRIMARY <span class="keyword">KEY</span>(<span class="keyword">id</span>)</div><div class="line"></div><div class="line">//多字段主键约束(复合主键)复合主键中有一个不同就可以</div><div class="line"><span class="keyword">id</span> <span class="built_in">INT</span>(<span class="number">11</span>) PRIMARY <span class="keyword">KEY</span>,<span class="keyword">name</span> <span class="built_in">VARCHAR</span>(<span class="number">12</span>) PRIMARY <span class="keyword">KEY</span></div><div class="line"> <span class="keyword">or</span></div><div class="line"><span class="keyword">id</span> <span class="built_in">INT</span>(<span class="number">11</span>),<span class="keyword">name</span> <span class="built_in">VARCHAR</span>(<span class="number">12</span>),PRIMARY <span class="keyword">KEY</span>(<span class="keyword">id</span>,<span class="keyword">name</span>)</div><div class="line"></div><div class="line">//其他约束待补充</div></pre></td></tr></table></figure>
<h4 id="查询表结构"><a href="#查询表结构" class="headerlink" title="查询表结构"></a>查询表结构</h4><figure class="highlight sql"><table><tr><td class="code"><pre><div class="line"><span class="keyword">DESCRIBE</span> 表名/<span class="keyword">DESC</span> 表名 //查看表基本结构语句</div><div class="line"></div><div class="line"><span class="keyword">SHOW</span> <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> 表名 //查看创建表的语句</div></pre></td></tr></table></figure>
<h4 id="修改数据表"><a href="#修改数据表" class="headerlink" title="修改数据表"></a>修改数据表</h4><p>CHANGE和MODIFY的区别？<br>MODIFY只能修改数据类型，但是CHANGE能够修改数据类型和字段名<br><figure class="highlight dts"><table><tr><td class="code"><pre><div class="line">ALTER TABLE <span class="params">&lt;旧表名&gt;</span> RENAME TO <span class="params">&lt;新表名&gt;</span> <span class="comment">//修改表名</span></div><div class="line"></div><div class="line">ALTER TABLE<span class="params">&lt;表名&gt;</span> CHANGE<span class="params">&lt;旧字段名&gt;</span><span class="params">&lt;新字段名&gt;</span><span class="params">&lt;新数据类型&gt;</span> <span class="comment">//修改表中的字段名 </span></div><div class="line"></div><div class="line">ALTER TABLE<span class="params">&lt;表名&gt;</span> MODIFY<span class="params">&lt;字段名&gt;</span><span class="params">&lt;数据类型&gt;</span>   <span class="comment">//修改表中的数据类型</span></div><div class="line"></div><div class="line">ALTER TABLE<span class="params">&lt;表名&gt;</span> MODIFY<span class="params">&lt;字段<span class="number">1</span>&gt;</span><span class="params">&lt;数据类型&gt;</span> FIRST|AFTER<span class="params">&lt;字段<span class="number">2</span>&gt;</span></div><div class="line"><span class="comment">//将字段1的位置放到第一，或者放到指定字段2的后面</span></div><div class="line"></div><div class="line">ALTER TABLE<span class="params">&lt;表名&gt;</span> CHANGE<span class="params">&lt;字段<span class="number">1</span>&gt;</span><span class="params">&lt;字段<span class="number">2</span>&gt;</span><span class="params">&lt;数据类型&gt;</span> FIRST|AFTER<span class="params">&lt;字段<span class="number">3</span>&gt;</span>　</div><div class="line"><span class="comment">//将字段2覆盖字段1，然后在进行排序</span></div><div class="line"></div><div class="line">ALTER TABLE<span class="params">&lt;表名称&gt;</span> ADD<span class="params">&lt;新字段名&gt;</span><span class="params">&lt;数据类型&gt;</span>[约束条件][FIRST|AFTER<span class="params">&lt;已存在的表名&gt;</span>]</div><div class="line"><span class="comment">//在一个特定位置增加一个新的字段，如果不指定位置，默认是最后一个。</span></div><div class="line"></div><div class="line">ALTER TABLE<span class="params">&lt;表名称&gt;</span> DROP<span class="params">&lt;字段名&gt;</span>; <span class="comment">//删除字段</span></div></pre></td></tr></table></figure></p>
<h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>新的一年，老天对我好点儿。</p>
]]></content>
    
    <summary type="html">
    
      Mysql一些操作的基本语法
    
    </summary>
    
    
      <category term="mysql" scheme="http://draymonder.me/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>Https协议及防盗链</title>
    <link href="http://draymonder.me/2018/02/12/the-link-https/"/>
    <id>http://draymonder.me/2018/02/12/the-link-https/</id>
    <published>2018-02-12T08:00:00.000Z</published>
    <updated>2018-02-20T08:14:09.674Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>  更新https协议的一些入门知识</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="http协议"><a href="#http协议" class="headerlink" title="http协议"></a>http协议</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><div class="line"><span class="bullet">1. </span>http协议是建立在tcp/ip协议基础上</div><div class="line"><span class="bullet">2. </span>我们的web开发数据的传输都是依赖于http协议</div><div class="line"><span class="bullet">3. </span>http协议全称是 超文本传输协议</div></pre></td></tr></table></figure>
<h3 id="http请求"><a href="#http请求" class="headerlink" title="http请求"></a>http请求</h3><figure class="highlight armasm"><table><tr><td class="code"><pre><div class="line">基本结构:</div><div class="line">  请求行  </div><div class="line">  消息头</div><div class="line">  消息体</div><div class="line"></div><div class="line"><span class="symbol">HTTP_HOST</span></div><div class="line"></div><div class="line"><span class="symbol">SERVER_NAME</span></div><div class="line"></div><div class="line"><span class="symbol">DOCUMENT_ROOT</span> 获取apache的主目录</div><div class="line"></div><div class="line"><span class="symbol">REMOTE_ADDR</span> 访问页面的<span class="built_in">ip</span></div><div class="line"></div><div class="line"><span class="symbol">REQUEST_URI</span> 请求的资源</div></pre></td></tr></table></figure>
<h3 id="Get-和-Post"><a href="#Get-和-Post" class="headerlink" title="Get 和 Post"></a>Get 和 Post</h3><figure class="highlight livecodeserver"><table><tr><td class="code"><pre><div class="line"><span class="number">1.</span> 安全性<span class="built_in">get</span>请求的数据会显示在地址栏上</div><div class="line">   <span class="built_in">post</span>请求的数据,放在<span class="keyword">http</span>协议的消息体</div><div class="line"><span class="number">2.</span> 从可以提交数据的大小看</div><div class="line">   <span class="number">2.1</span> <span class="keyword">http</span>协议本身并没有限制数据大小</div><div class="line">   <span class="number">2.3</span> 浏览器在对<span class="built_in">get</span>和<span class="built_in">post</span>请求做限制</div><div class="line">   <span class="built_in">get</span>请求数据 (<span class="number">2</span>k+<span class="number">35</span>B),<span class="built_in">post</span>没有限制</div><div class="line"><span class="number">3.</span> <span class="built_in">get</span>请求可以更好的添加到收藏夹</div></pre></td></tr></table></figure>
<h3 id="防盗链"><a href="#防盗链" class="headerlink" title="防盗链"></a>防盗链</h3><figure class="highlight php"><table><tr><td class="code"><pre><div class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_SERVER[<span class="string">'HTTP_REFERER'</span>])) &#123;</div><div class="line">    <span class="keyword">if</span>(strpos($_SERVER[<span class="string">'HTTP_REFERER'</span>],<span class="string">"http://localhost/"</span>)==<span class="number">0</span>) &#123;</div><div class="line">        <span class="keyword">echo</span> <span class="string">"Draymonder"</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span> &#123;</div><div class="line">        <span class="keyword">echo</span> <span class="string">"访问路径非法"</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="keyword">else</span> &#123;</div><div class="line">    <span class="keyword">echo</span> <span class="string">"访问路径非法"</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="重定向"><a href="#重定向" class="headerlink" title="重定向"></a>重定向</h3><figure class="highlight abnf"><table><tr><td class="code"><pre><div class="line">header(<span class="string">"Refresh: 3;url=http://www.xxx.com"</span>)<span class="comment">;</span></div></pre></td></tr></table></figure>
<h3 id="页面缓存"><a href="#页面缓存" class="headerlink" title="页面缓存"></a>页面缓存</h3><figure class="highlight abnf"><table><tr><td class="code"><pre><div class="line">header(<span class="string">"Expires: -1"</span>)<span class="comment">;</span></div><div class="line">header(<span class="string">"Cache-Control: no_cache"</span>)<span class="comment">;</span></div><div class="line">header(<span class="string">"Pragma: no-cache"</span>)<span class="comment">;</span></div></pre></td></tr></table></figure>
<h3 id="文件下载"><a href="#文件下载" class="headerlink" title="文件下载"></a>文件下载</h3><figure class="highlight bash"><table><tr><td class="code"><pre><div class="line"><span class="variable">$file_name</span> = <span class="string">"1.jpg"</span>;</div><div class="line"><span class="keyword">if</span>(!file_exists(<span class="variable">$file_name</span>) )&#123;</div><div class="line">    <span class="built_in">echo</span> <span class="string">"文件不存在"</span>;</div><div class="line">    <span class="built_in">return</span> ;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="variable">$fp</span> = fopen(<span class="variable">$file_name</span>,<span class="string">"r"</span>);</div><div class="line">// <span class="variable">$file_size</span> = filesize(<span class="variable">$file_name</span>);</div><div class="line">// <span class="built_in">echo</span> <span class="variable">$file_size</span>;</div><div class="line">header(<span class="string">"Content-Type: application/octet-stream"</span>);</div><div class="line">header(<span class="string">"Accept-Ranges: bytes"</span>);</div><div class="line">header(<span class="string">"Accept-Length: "</span>.filesize(<span class="variable">$file_name</span>));</div><div class="line">header(<span class="string">"Content-Disposition: attachment; filename="</span>.<span class="variable">$file_name</span>);</div><div class="line"></div><div class="line"></div><div class="line"><span class="variable">$buffer</span> = 1024;</div><div class="line"><span class="keyword">while</span> (!feof(<span class="variable">$fp</span>))&#123;</div><div class="line">    <span class="variable">$file_data</span>= fread(<span class="variable">$fp</span>,<span class="variable">$buffer</span>);</div><div class="line">    <span class="built_in">echo</span> <span class="variable">$file_data</span>;    </div><div class="line">&#125;</div><div class="line">fclose(<span class="variable">$fp</span>);</div><div class="line">具体用处自行搜索</div></pre></td></tr></table></figure>
<h3 id="utf-8转码gb2312"><a href="#utf-8转码gb2312" class="headerlink" title="utf-8转码gb2312"></a>utf-8转码gb2312</h3><figure class="highlight shell"><table><tr><td class="code"><pre><div class="line"><span class="meta">$</span><span class="bash">file_name = iconv(<span class="string">"utf-8"</span>,<span class="string">"gb2312"</span>,<span class="variable">$file_name</span>);</span></div></pre></td></tr></table></figure>
<h3 id="302，304码运用"><a href="#302，304码运用" class="headerlink" title="302，304码运用"></a>302，304码运用</h3><h4 id="302码"><a href="#302码" class="headerlink" title="302码"></a>302码</h4><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line"><span class="php"><span class="meta">&lt;?php</span> </span></div><div class="line"><span class="php">  header(<span class="string">"Location: http://www.baidu.com"</span>);</span></div><div class="line"><span class="php"><span class="meta">?&gt;</span></span></div><div class="line"></div><div class="line">//这时候，就会跳转到百度页面，实际过程是 </div><div class="line">本地链接到当前页面，又跳转到百度页面</div></pre></td></tr></table></figure>
<h4 id="304码"><a href="#304码" class="headerlink" title="304码"></a>304码</h4><p><a href="https://www.cnblogs.com/ziyunfei/archive/2012/11/16/2772729.htm" target="_blank" rel="external">304码详解</a><br><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">如果资源之前出现，那么就不需要重新加载</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      Https协议,请求,防盗链,网页缓存,文件下载,转码
    
    </summary>
    
    
      <category term="php" scheme="http://draymonder.me/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>PHP错误和异常处理</title>
    <link href="http://draymonder.me/2018/02/11/the-errors-in-php/"/>
    <id>http://draymonder.me/2018/02/11/the-errors-in-php/</id>
    <published>2018-02-11T06:00:00.000Z</published>
    <updated>2018-02-11T04:13:01.736Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最后学一些，提高代码的健壮性和安全性</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="文件相对和绝对路径"><a href="#文件相对和绝对路径" class="headerlink" title="文件相对和绝对路径"></a>文件相对和绝对路径</h3><figure class="highlight ceylon"><table><tr><td class="code"><pre><div class="line">相对路径</div><div class="line"><span class="comment">// ../代表上级文件</span></div><div class="line">file<span class="number">_</span><span class="keyword">exists</span>(<span class="string">"../../"</span>) </div><div class="line"></div><div class="line">绝对路径</div><div class="line"><span class="comment">// / 和 \\都可以</span></div><div class="line">file<span class="number">_</span><span class="keyword">exists</span>(<span class="string">"c:/Draymonder.txt"</span>);</div></pre></td></tr></table></figure>
<h3 id="php处理错误的三种方法"><a href="#php处理错误的三种方法" class="headerlink" title="php处理错误的三种方法"></a>php处理错误的三种方法</h3><figure class="highlight php"><table><tr><td class="code"><pre><div class="line"><span class="number">1.</span> 使用简单的<span class="keyword">die</span>语句</div><div class="line"></div><div class="line"><span class="keyword">if</span>(!file_exists(<span class="string">"draymonder.txt"</span>)) &#123;</div><div class="line">    <span class="keyword">echo</span> <span class="string">"文件不存在"</span>;</div><div class="line">    <span class="keyword">die</span>();</div><div class="line">&#125;</div><div class="line"><span class="keyword">else</span> &#123;</div><div class="line">    <span class="comment">//打开文件的操作</span></div><div class="line">&#125;</div><div class="line">或者</div><div class="line">file_exists(<span class="string">"draymonder.txt"</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">"文件不存在"</span>);</div></pre></td></tr></table></figure>
<figure class="highlight less"><table><tr><td class="code"><pre><div class="line"><span class="selector-tag">2</span>. 自定义处理</div><div class="line"><span class="selector-tag">error_function</span>(error_level,error_message,</div><div class="line">error_file,error_line,error_context)</div><div class="line"></div><div class="line">错误处理程序设置</div><div class="line"><span class="selector-tag">set_error_handler</span>(<span class="string">"error_function"</span>);</div></pre></td></tr></table></figure>
<figure class="highlight awk"><table><tr><td class="code"><pre><div class="line"><span class="number">3</span>. 自定义触发器</div><div class="line"><span class="keyword">function</span> my_error(<span class="variable">$no</span>,<span class="variable">$mess</span>)&#123;</div><div class="line">    echo <span class="string">"错误号是"</span>.<span class="variable">$no</span>;</div><div class="line">&#125;</div><div class="line"><span class="regexp">//</span>这里可以设置 </div><div class="line"><span class="regexp">//</span>E_USER_WARNING</div><div class="line"><span class="regexp">//</span>E_USER_ERROR</div><div class="line"><span class="regexp">//</span>E_USER_NOTICE</div><div class="line">set_error_handler(<span class="string">"my_error"</span>,E_USER_WARNING);</div><div class="line"></div><div class="line"><span class="variable">$age</span> = <span class="number">120</span>;</div><div class="line"><span class="keyword">if</span>(<span class="variable">$age</span> &gt; <span class="number">110</span>) &#123;</div><div class="line">    trigger_error(<span class="string">"输入年龄过大"</span>,E_USER_WARNING);</div><div class="line">    <span class="keyword">exit</span>();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="php中处理异常的方法"><a href="#php中处理异常的方法" class="headerlink" title="php中处理异常的方法"></a>php中处理异常的方法</h3><p><a href="http://www.php.net/manual/zh/class.exception.php" target="_blank">php Exception类</a><br><figure class="highlight php"><table><tr><td class="code"><pre><div class="line"><span class="keyword">try</span>&#123; &#125;</div><div class="line"><span class="keyword">catch</span> (<span class="keyword">Exception</span> $e)&#123; &#125;</div><div class="line"><span class="keyword">throw</span> <span class="keyword">new</span> <span class="keyword">Exception</span>(<span class="string">"Message"</span>);</div><div class="line"></div><div class="line">当捕获到异常后，<span class="keyword">try</span>()后面的代码将不继续执行</div><div class="line"></div><div class="line"><span class="comment">//顶级异常处理器</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">my_exception</span><span class="params">($e)</span></span>&#123;</div><div class="line">    <span class="keyword">echo</span> <span class="string">"错误信息是"</span>.$e.getMessage();</div><div class="line">&#125;</div><div class="line">set_exception_handler(<span class="string">"my_exception"</span>);</div></pre></td></tr></table></figure></p>
<h3 id="php错误日志"><a href="#php错误日志" class="headerlink" title="php错误日志"></a>php错误日志</h3><figure class="highlight awk"><table><tr><td class="code"><pre><div class="line"><span class="regexp">//</span> \r\n是向文件输入一个换行</div><div class="line"><span class="regexp">//</span> &lt;br&gt;是向网页输出一个换行</div><div class="line"></div><div class="line"> </div><div class="line"><span class="keyword">function</span> my_error(<span class="variable">$no</span>,<span class="variable">$mess</span>)&#123;</div><div class="line">    <span class="variable">$err_info</span> = <span class="string">"错误号是:$no --- 错误信息是:$mess"</span>;</div><div class="line">    echo <span class="variable">$err_info</span>;</div><div class="line">    error_log(<span class="variable">$err_info</span>.<span class="string">"\r\n"</span>,<span class="number">3</span>,<span class="string">"my_error.txt"</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line">set_error_handler(<span class="string">"my_error"</span>,E_USER_WARNING);</div><div class="line"></div><div class="line"><span class="variable">$age</span> = <span class="number">120</span>;</div><div class="line"><span class="keyword">if</span>(<span class="variable">$age</span> &gt; <span class="number">110</span>) &#123;</div><div class="line">    trigger_error(<span class="string">"输入年龄过大"</span>,E_USER_WARNING);</div><div class="line">    <span class="keyword">exit</span>();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="时间的调用"><a href="#时间的调用" class="headerlink" title="时间的调用"></a>时间的调用</h3><p><a href="https://www.cnblogs.com/caicaizi/p/6553419.html" target="_blank">PHP中设置时区方法小结</a><br><figure class="highlight abnf"><table><tr><td class="code"><pre><div class="line">一些常用的时区标识符说明： </div><div class="line"></div><div class="line">Asia/Shanghai – 上海 </div><div class="line">Asia/Chongqing – 重庆 </div><div class="line">Asia/Urumqi – 乌鲁木齐 </div><div class="line">Asia/Hong_Kong – 香港 </div><div class="line">Asia/Macao – 澳门 </div><div class="line">Asia/Taipei – 台北 </div><div class="line">Asia/Singapore – 新加坡 </div><div class="line"></div><div class="line">date_default_timezone_set(<span class="string">"Asia/Shanghai"</span>)<span class="comment">;</span></div><div class="line">echo date(<span class="string">"Y-m-d G:i:s"</span>)<span class="comment">;</span></div></pre></td></tr></table></figure></p>
<h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2>]]></content>
    
    <summary type="html">
    
      文件相对和绝对路径,错误和异常处理,php错误日志,时间的调用
    
    </summary>
    
    
      <category term="php" scheme="http://draymonder.me/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>PHP 面向对象(4)</title>
    <link href="http://draymonder.me/2018/02/09/object-oriented-of-php4/"/>
    <id>http://draymonder.me/2018/02/09/object-oriented-of-php4/</id>
    <published>2018-02-09T07:00:00.000Z</published>
    <updated>2018-02-09T10:17:38.162Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>继续补基础知识</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="抽象类"><a href="#抽象类" class="headerlink" title="抽象类"></a>抽象类</h3><figure class="highlight php"><table><tr><td class="code"><pre><div class="line"><span class="number">1.</span> 用<span class="keyword">abstract</span> 修饰类，就是抽象类 </div><div class="line"></div><div class="line"><span class="number">2.</span> 如果一个方法用<span class="keyword">abstract</span>修饰，那么方法就不能实现</div><div class="line"></div><div class="line"><span class="number">3.</span> 抽象类不能被实例化, 可以没有抽象方法</div><div class="line"></div><div class="line"><span class="number">4.</span> 如果A类继承了抽象类B,则要求A实现B的所有的抽象方法</div><div class="line"></div><div class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> 类名</span>&#123;</div><div class="line">    成员</div><div class="line">    <span class="keyword">abstract</span> <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">showInfo</span><span class="params">()</span></span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h3><figure class="highlight php"><table><tr><td class="code"><pre><div class="line"><span class="comment">//软件工程中追求高内聚 低耦合</span></div><div class="line"></div><div class="line">类实现接口 类继承类</div><div class="line"></div><div class="line"><span class="number">1.</span> 接口不能被实例化</div><div class="line"></div><div class="line"><span class="number">2.</span> 接口中所有方法，都不能有主体,并且是<span class="keyword">public</span></div><div class="line"></div><div class="line"><span class="number">3.</span> 一个类可以实现多个接口</div><div class="line"></div><div class="line"><span class="number">4.</span> 接口可以有属性，必须是常量</div><div class="line"></div><div class="line"><span class="number">5.</span> 接口中属性可以使用 接口名::常量</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">interface</span> 接口名</span>&#123;</div><div class="line">    <span class="keyword">const</span> 常量名;</div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> 方法<span class="params">()</span></span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> 类名 <span class="keyword">implements</span> 接口名1, 接口名2</span>&#123;</div><div class="line">    对接口中的属性和方法的实现;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="final-关键字"><a href="#final-关键字" class="headerlink" title="final 关键字"></a>final 关键字</h3><figure class="highlight php"><table><tr><td class="code"><pre><div class="line"><span class="number">1.</span> 使某些类，不被其他类所继承(出于安全性的考虑或者其他原因)</div><div class="line"></div><div class="line"><span class="keyword">final</span> <span class="class"><span class="keyword">class</span> 类名</span>&#123;</div><div class="line">    属性;</div><div class="line">    方法;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="number">2.</span> <span class="keyword">final</span> 修饰的方法是可以继承的，但是不可以被子类重写</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> 类名</span>&#123;</div><div class="line">    <span class="keyword">final</span> <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> 方法名<span class="params">()</span></span>&#123;</div><div class="line"></div><div class="line">    &#125; </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="const-关键字"><a href="#const-关键字" class="headerlink" title="const 关键字"></a>const 关键字</h3><figure class="highlight actionscript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">const</span> 常量名 = 初值;</div><div class="line"><span class="keyword">const</span> 前不要加修饰符</div><div class="line">常量同样和+静态变量属于类本身，不属于对象本身</div><div class="line"></div><div class="line">使用: 类名::常量名  接口名::常量名</div><div class="line"><span class="comment">//尽量全部大写</span></div></pre></td></tr></table></figure>
<h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>今天突然看到一些鸡汤，又想写写日记了呢，嘿嘿，我会好好记录的。</p>
]]></content>
    
    <summary type="html">
    
      抽象类,接口,final,const关键字
    
    </summary>
    
    
      <category term="php" scheme="http://draymonder.me/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>PHP 面向对象(3)</title>
    <link href="http://draymonder.me/2018/02/08/object-oriented-of-php3/"/>
    <id>http://draymonder.me/2018/02/08/object-oriented-of-php3/</id>
    <published>2018-02-08T15:00:00.000Z</published>
    <updated>2018-02-09T01:34:57.082Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>今天争取把面向对象的基础知识了解一下，然后明天开始mysql的学习，进度条有点儿慢</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="封装"><a href="#封装" class="headerlink" title="封装"></a>封装</h3><p>方法之间可以互相调用,需要用$this调用<br><figure class="highlight lasso"><table><tr><td class="code"><pre><div class="line">访问控制修饰符</div><div class="line">    <span class="keyword">public</span> 类内部,外部,子类都可以访问</div><div class="line">    <span class="keyword">protected</span> 类内部,子类可以访问</div><div class="line">    <span class="keyword">private</span> 类内部可以访问</div><div class="line"></div><div class="line"><span class="keyword">protected</span> 和 <span class="keyword">private</span> 成员 </div><div class="line">用<span class="keyword">public</span>方法去访问或修改</div><div class="line"></div><div class="line">还有一种形式，用魔术方法</div><div class="line">__set($pro_name,$val)</div><div class="line">__get($pro_name)</div></pre></td></tr></table></figure></p>
<h3 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h3><p>为了提高代码的复用性<br><figure class="highlight scala"><table><tr><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">子类</span> <span class="keyword">extends</span> <span class="title">父类</span></span>&#123;</div><div class="line">    <span class="comment">//自己的属性和方法</span></div><div class="line">&#125;</div><div class="line">只继承父类 public 和 <span class="keyword">protected</span></div><div class="line">public可以直接被子类和外部调用</div><div class="line"><span class="keyword">protected</span> 只能在子类中调用(调用$<span class="keyword">this</span>)</div><div class="line"></div><div class="line">一个子类只能有一个父类</div><div class="line"></div><div class="line">在创建某个子类对象时，默认情况下，不会调用父类的构造函数</div></pre></td></tr></table></figure></p>
<h3 id="多态"><a href="#多态" class="headerlink" title="多态"></a>多态</h3><figure class="highlight brainfuck"><table><tr><td class="code"><pre><div class="line"><span class="comment">本身是不可以向C</span><span class="literal">+</span><span class="literal">+</span><span class="comment">那样重载的</span></div><div class="line"><span class="comment"></span></div><div class="line"><span class="comment">在网上学到的</span> <span class="comment">方法，我觉得比较好记的</span></div></pre></td></tr></table></figure>
<h4 id="重写"><a href="#重写" class="headerlink" title="重写"></a>重写</h4><figure class="highlight clean"><table><tr><td class="code"><pre><div class="line">子类会覆盖父类重名的方法</div><div class="line">访问修饰符 子类的范围 &gt;= 父类的范围</div><div class="line"></div><div class="line">如果子类想去调用父类的某个方法</div><div class="line">可以用类名::方法名 或者 parent::方法名</div></pre></td></tr></table></figure>
<h4 id="可选参数，允许变量设置默认值"><a href="#可选参数，允许变量设置默认值" class="headerlink" title="可选参数，允许变量设置默认值"></a>可选参数，允许变量设置默认值</h4><figure class="highlight lasso"><table><tr><td class="code"><pre><div class="line">function <span class="keyword">sum</span>($var1,$var2,$var3=<span class="built_in">NULL</span>)&#123;<span class="comment">//$var3设置默认值</span></div><div class="line">    echo $var1+$var2+$var3;</div><div class="line">&#125;</div><div class="line"><span class="keyword">sum</span>(<span class="number">1</span>,<span class="number">2</span>);<span class="comment">//2</span></div><div class="line"><span class="keyword">sum</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>);<span class="comment">//2.5</span></div></pre></td></tr></table></figure>
<h4 id="使用魔术方法-call"><a href="#使用魔术方法-call" class="headerlink" title="使用魔术方法 __call()"></a>使用魔术方法 __call()</h4><figure class="highlight php"><table><tr><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">demo</span></span>&#123;</div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span><span class="params">($method,$p)</span></span>&#123;</div><div class="line">        <span class="keyword">if</span>($method == <span class="string">"test"</span>)&#123;</div><div class="line">            <span class="keyword">switch</span> (count($p)) &#123;<span class="comment">//获得参数数组个数</span></div><div class="line">                <span class="keyword">case</span> <span class="number">2</span>:</div><div class="line">                    <span class="keyword">$this</span>-&gt;test2($args[<span class="number">0</span>],$args[<span class="number">1</span>]);</div><div class="line">                    <span class="keyword">break</span>;</div><div class="line">                <span class="keyword">case</span> <span class="number">3</span>:</div><div class="line">                    <span class="keyword">$this</span>-&gt;test3($args[<span class="number">0</span>],$args[<span class="number">1</span>],$args[<span class="number">2</span>]);</div><div class="line">                    <span class="keyword">break</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">test2</span><span class="params">($var1,$var2)</span></span>&#123;</div><div class="line">        <span class="comment">#code...</span></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">test3</span><span class="params">($var1,$var2,$var3)</span></span>&#123;</div><div class="line">        <span class="comment">#code...</span></div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="comment">//调用</span></div><div class="line">$obj = <span class="keyword">new</span> demo();</div><div class="line">$obj-&gt;test(<span class="string">"var1"</span>,<span class="string">"var2"</span>);</div><div class="line">$obj-&gt;test(<span class="string">"var1"</span>,<span class="string">"var2"</span>,<span class="string">"var3"</span>);</div></pre></td></tr></table></figure>
<h3 id="魔术方法"><a href="#魔术方法" class="headerlink" title="魔术方法"></a>魔术方法</h3><figure class="highlight crystal"><table><tr><td class="code"><pre><div class="line">魔术常量</div><div class="line"><span class="keyword">__FILE__</span>    当前文件的路径</div><div class="line"><span class="keyword">__DIR__</span>     文件所在的目录</div></pre></td></tr></table></figure>
<h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>你的负担将变成礼物 你受的苦将照亮你的路</p>
]]></content>
    
    <summary type="html">
    
      面向对象的三大特征 封装,继承,多态
    
    </summary>
    
    
      <category term="php" scheme="http://draymonder.me/tags/php/"/>
    
  </entry>
  
</feed>
